{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/upload-image.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UploadImage() {\n  _s();\n\n  const [doc, setDoc] = useState();\n  const [image, setImage] = useState(null);\n\n  const upload = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('file', doc);\n    console.warn(doc);\n    let url = \"http://localhost:3080/file/uploadimage\";\n    axios.post(url, data, {// receive two parameter endpoint url ,form data \n    }).then(res => {\n      // then print response status\n      console.warn(res);\n    });\n  };\n\n  const getImage = () => {\n    axios.get(\"http://localhost:3080/file?type=img&id=61a45dee1d898f49a3b1f2da\").then();\n  };\n\n  const onFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.addEventListener('load', () => {\n        console.log(reader.result);\n        setImage(reader.result);\n      });\n    }\n  };\n\n  const createImage = url => {\n    new Promise((resolve, reject) => {\n      const image = new Image();\n      image.addEventListener(\"load\", () => resolve(image));\n      image.addEventListener(\"error\", error => reject(error));\n      image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n\n      image.src = url;\n    });\n  };\n\n  const getCroppedImg = async (imageSrc, pixelCrop, rotation = 0) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => image);\n    image.addEventListener(\"error\", error => console.log(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n\n    image.src = imageSrc;\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const width = Math.max(1, Math.floor(image.width));\n    const height = Math.max(1, Math.floor(height));\n    ctx.drawImage(image, x, y, width, height);\n    const maxSize = Math.max(image.width, image.height);\n    const safeArea = 2 * (maxSize / 2 * Math.sqrt(2)); // set each dimensions to double largest dimension to allow for a safe area for the\n    // image to rotate in without being clipped by canvas context\n\n    canvas.width = safeArea;\n    canvas.height = safeArea; // draw rotated image and store data.\n\n    ctx.drawImage(image, safeArea / 2 - image.width * 0.5, safeArea / 2 - image.height * 0.5);\n    const data = ctx.getImageData(0, 0, safeArea, safeArea); // paste generated rotate image with correct offsets for x,y crop values.\n\n    ctx.putImageData(data, 0 - safeArea / 2 + image.width * 0.5, 0 - safeArea / 2 + image.height * 0.5); // As Base64 string\n    // return canvas.toDataURL(\"image/jpeg\");\n\n    return canvas;\n  };\n\n  const generateDownload = async (imageSrc, crop) => {\n    if (!imageSrc) {\n      return;\n    }\n\n    const canvas = await getCroppedImg(imageSrc, crop);\n    canvas.toBlob(blob => {\n      const previewUrl = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.download = \"image.jpeg\";\n      anchor.href = URL.createObjectURL(blob);\n      anchor.click();\n      window.URL.revokeObjectURL(previewUrl);\n    }, \"image/jpeg\", 0.66);\n  };\n\n  const onDownload = () => {\n    generateDownload(image, 0);\n  }; //encType=\"multipart/form-data\" action=\"/file/uploadimage\" method=\"POST\" multiple=\"multiple\"\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: upload,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            accept: \"image/*\",\n            type: \"file\",\n            id: \"file\",\n            name: \"file\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: onDownload,\n          children: \"download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://localhost:3080/file?type=img&id=61a45dee1d898f49a3b1f2da\",\n          width: \"250\",\n          height: \"250\",\n          alt: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mt-3\",\n        onClick: getImage,\n        children: \"Show image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadImage, \"qvAdfQCRoovALirK1B7at+oSULs=\");\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukth√•nd/secondhand/src/upload-image.js"],"names":["axios","useEffect","useState","UploadImage","doc","setDoc","image","setImage","upload","e","preventDefault","data","FormData","append","console","warn","url","post","then","res","getImage","get","onFileChange","event","target","files","length","reader","FileReader","readAsDataURL","addEventListener","log","result","createImage","Promise","resolve","reject","Image","error","setAttribute","src","getCroppedImg","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","width","Math","max","floor","height","drawImage","x","y","maxSize","safeArea","sqrt","getImageData","putImageData","generateDownload","crop","toBlob","blob","previewUrl","window","URL","createObjectURL","anchor","download","href","click","revokeObjectURL","onDownload"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction UploadImage(){\n\n    const [doc, setDoc] = useState();\n    const [image, setImage] = useState(null);\n\n\n    const upload = (e) => {\n        e.preventDefault();\n\n        const data = new FormData() \n\n        data.append('file', doc)\n\n        console.warn(doc);\n\n        let url = \"http://localhost:3080/file/uploadimage\";\n\n        axios.post(url, data, { // receive two parameter endpoint url ,form data \n\n        })\n\n        .then(res => { // then print response status\n\n            console.warn(res);\n\n        })\n    }\n\n    const getImage = () => {\n        axios.get(\"http://localhost:3080/file?type=img&id=61a45dee1d898f49a3b1f2da\")\n            .then()\n    }\n\n    const onFileChange = event => {\n        if(event.target.files && event.target.files.length > 0){\n            const reader = new FileReader();\n            reader.readAsDataURL(event.target.files[0]);\n            reader.addEventListener('load', () => {\n                console.log(reader.result);\n                setImage(reader.result);\n            })\n        }\n    };\n\n    const createImage = (url) => {\n        new Promise((resolve, reject) => {\n            const image = new Image();\n            image.addEventListener(\"load\", () => resolve(image));\n            image.addEventListener(\"error\", (error) => reject(error));\n            image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n            image.src = url;\n        });\n    }\n\t\n\n    const getCroppedImg = async (imageSrc, pixelCrop, rotation = 0) => {\n        const image = new Image();\n            image.addEventListener(\"load\", () => image);\n            image.addEventListener(\"error\", (error) => console.log(error));\n            image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\n            image.src = imageSrc;\n\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n    \n        const width = Math.max(1, Math.floor(image.width));\n        const height = Math.max(1, Math.floor(height));\n        ctx.drawImage(image, x, y, width, height);\n\n        const maxSize = Math.max(image.width, image.height);\n        const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n    \n        // set each dimensions to double largest dimension to allow for a safe area for the\n        // image to rotate in without being clipped by canvas context\n        canvas.width = safeArea;\n        canvas.height = safeArea;\n    \n        // draw rotated image and store data.\n        ctx.drawImage(\n            image,\n            safeArea / 2 - image.width * 0.5,\n            safeArea / 2 - image.height * 0.5\n        );\n    \n        const data = ctx.getImageData(0, 0, safeArea, safeArea);\n    \n        // paste generated rotate image with correct offsets for x,y crop values.\n        ctx.putImageData(\n            data,\n            0 - safeArea / 2 + image.width * 0.5 ,\n            0 - safeArea / 2 + image.height * 0.5 \n        );\n    \n        // As Base64 string\n        // return canvas.toDataURL(\"image/jpeg\");\n        return canvas;\n    }\n\n    const generateDownload = async (imageSrc, crop) => {\n        if (!imageSrc) {\n            return;\n        }\n    \n        const canvas = await getCroppedImg(imageSrc, crop);\n    \n        canvas.toBlob(\n            (blob) => {\n                const previewUrl = window.URL.createObjectURL(blob);\n    \n                const anchor = document.createElement(\"a\");\n                anchor.download = \"image.jpeg\";\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n    \n                window.URL.revokeObjectURL(previewUrl);\n            },\n            \"image/jpeg\",\n            0.66\n        );\n    };\n\n    const onDownload = () => {\n        generateDownload(image,0);\n    }\n\n//encType=\"multipart/form-data\" action=\"/file/uploadimage\" method=\"POST\" multiple=\"multiple\"\n    return(\n        <div>\n            <div className=\"upload\">\n                <form onSubmit={upload}>\n                    <div className=\"input-group mb-3\">\n                        <input className=\"form-control\" accept=\"image/*\" type=\"file\" id=\"file\" name=\"file\"  onChange={onFileChange}></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={onDownload}>download</button>\n                </form>\n            </div>\n            <hr/>\n            <div className=\"show-images\">\n                <div>\n                    <img src=\"http://localhost:3080/file?type=img&id=61a45dee1d898f49a3b1f2da\" width=\"250\" height=\"250\" alt=\"pic\"/>\n                </div>\n                <button type=\"button\" className=\"btn btn-primary mt-3\" onClick={getImage}>Show image</button>\n            </div>\n        </div>\n    )\n}\n\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}