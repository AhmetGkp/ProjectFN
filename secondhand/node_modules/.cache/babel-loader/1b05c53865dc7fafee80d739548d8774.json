{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js\";\nimport React from \"react\";\nimport \"./SearchResult.css\";\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\nimport { instanceAxs } from \"../../api/Api\"; // import Date from \"./FilterComponents/Date\";\n\nimport Price from \"./FilterComponents/Price\";\nimport Status from \"./FilterComponents/Status\";\nimport Tags from \"./FilterComponents/Tags.js\";\n/* \r\nfiltersWithMultipleParams = [\"status\",\"location\"];\r\nfilter = {'price_max': 89000, 'status': 'used new'}\r\ntag = [\r\n{key: \"statusUsed\",value: \"Used\", filterKey: 'status', filterValue:'used'}, \r\n{key: \"statusNew\", value: \"New\", filterKey: 'status', filterValue: 'new'},\r\n{key: \"maxPrice\", value: \"til 1800\", filterKey: 'price_max', filterValue: 1800}\r\n]\r\n\r\naddFilter(filterKey, filterValue, tagKey, tagValue){\r\n  filter = {filterKey, filterValue}\r\n  addTag(filterKey, filterValue, tagKey, tagValue)\r\n}\r\nremoveFilter(filterKey, filterValue){\r\n  var filterObject = filter.find(filterKey);\r\n  if(filtersWithMultipleparams[filterObject] !== -1){\r\n    remove(filterObject.value.filterValue)\r\n    if(filterObject.value === ''){\r\n      remove(filterObject)\r\n    }\r\n  } else {\r\n    remove(filterObject)\r\n  }\r\n}\r\naddTag(filterKey, filterValue, tagKey, tagValue){\r\n  tag = {key: tagKey, value: tagValue, filterKey, filterValue}\r\n}\r\nremoveTag(tagKey,filterKey, filterValue){\r\n  tag.remove(tagKey)\r\n  this.removeFilter(filterKey, filterValue)\r\n}\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSortingCategory = e => {\n      var sorting = e.target.value;\n      this.setFilter(\"order\", sorting, sorting);\n    };\n\n    this.getFiltersOnMount = () => {\n      let urlParams = this.state.urlParams;\n      let params = {};\n\n      for (const [key, value] of urlParams) {\n        params[key] = value;\n        console.log({\n          key,\n          value\n        });\n      }\n\n      this.setState({\n        filters: params\n      });\n      console.log(params);\n      return params;\n    };\n\n    this.makeSearch = () => {\n      let filters = this.state.filters;\n      var queryString = \"\";\n      Object.entries(filters).forEach(([key, value]) => queryString += `${key}=${value}&`);\n      if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n      console.log(queryString);\n      let query = `/search?${queryString}`;\n      instanceAxs.get(query).then(response => {\n        console.log(\"Search response\", response);\n\n        if (response.data.status) {\n          var returnedItems = response.data.items;\n          this.setState({\n            items: returnedItems,\n            resultCount: returnedItems.length\n          });\n          window.history.pushState(\"page2\", \"seach made\", query);\n        } else {\n          return console.log(response.data.message);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.addFilterTag = (key, value, queryKey, queryValue) => {\n      let tagArr = this.state.tagArray;\n      var object = tagArr.find(obj => obj.key === key);\n      var objIndex = tagArr.indexOf(object);\n\n      if (objIndex !== -1) {\n        tagArr[objIndex] = {\n          key: key,\n          value: value,\n          queryKey: queryKey,\n          queryValue: queryValue\n        };\n      } else {\n        tagArr.push({\n          key: key,\n          value: value,\n          queryKey: queryKey,\n          queryValue: queryValue\n        });\n      }\n\n      this.setState({\n        tagArr: tagArr\n      });\n    };\n\n    this.setFilter = (filter, queryValue, tagKey, tagValue) => {\n      var queryFilters = this.state.filters;\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\n\n      if (multipleQueryFilters.includes(filter, 0)) {\n        var qValue = queryFilters[filter];\n        if (qValue === undefined || qValue === null) qValue = '';\n        if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\n        qValue = qValue.trim();\n        queryFilters[filter] = qValue;\n      } else {\n        queryFilters[filter] = queryValue;\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n      this.addFilterTag(tagKey, tagValue, filter, queryValue);\n      /* if (filter === \"status\") {\r\n        let val = parameters[\"status\"];\r\n        if (val === undefined || val === null) val = \"\";\r\n        if (!val.includes(queryValue)) val += \" \" + queryValue;\r\n        val = val.trim();\r\n        parameters[\"status\"] = val;\r\n        this.addFilterTag(tagKey, tagValue, filter, queryValue);\r\n        this.setState({\r\n          filters: parameters,\r\n        });\r\n      } else {\r\n        parameters[filter] = queryValue;\r\n        this.addFilterTag(tagKey, tagValue, filter, queryValue);\r\n        this.setState({\r\n          filters: parameters,\r\n        });\r\n      } */\n    };\n\n    this.removeFilter = (filter, queryValue) => {\n      // remove a filter completely or erase a prop of it\n      var queryFilters = this.state.filters;\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\n      var qValue = queryValue || undefined;\n\n      if (multipleQueryFilters.includes(filter)) {\n        if (queryFilters[filter] !== undefined && queryFilters[filter] !== null && qValue !== undefined) {\n          var qFilter = queryFilters[filter];\n          console.log(\"qFilter: \", qFilter);\n          var newQueryFilter = String(qFilter).replace(qValue, '');\n          newQueryFilter = newQueryFilter.trim();\n          console.log(\"new filter\", newQueryFilter);\n          queryFilters[filter] = newQueryFilter;\n\n          if (queryFilters[filter] === '') {\n            delete queryFilters[filter];\n          }\n        }\n      } else {\n        if (queryFilters[filter] !== undefined && queryFilters[filter] !== null) {\n          delete queryFilters[filter];\n        }\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n      /* var prop = property || undefined;\r\n      var params = this.state.filters;\r\n      if (filterOrProp === \"prop\") {\r\n        if (\r\n          params[filter] !== undefined &&\r\n          params[filter] !== null &&\r\n          prop !== undefined\r\n        ) {\r\n          let parameter = params[filter];\r\n          console.log(\"parameter\", parameter)\r\n          let newparameter = String(parameter).replace(prop, \"\");\r\n          newparameter = newparameter.trim();\r\n          console.log(\"new parameter\", newparameter);\r\n          params[filter] = newparameter;\r\n          if (params[filter] === \"\") delete this.state.filters[filter];\r\n          console.log(this.state.filters);\r\n        }\r\n      } else {\r\n        if (params[filter] !== undefined && params[filter] !== null) {\r\n          delete this.state.filters[filter];\r\n          console.log(this.state.filters);\r\n        }\r\n      } */\n    };\n\n    this.removeTag = (key, queryKey) => {\n      var tagArray = this.state.tagArray;\n      var qKey = queryKey || undefined;\n      let obj = tagArray.find(x => x.key === key);\n\n      if (obj !== undefined) {\n        let index = tagArray.indexOf(obj);\n        tagArray.splice(index, 1);\n        this.setState({\n          tagArray\n        });\n        this.removeFilter(obj.queryKey, obj.queryValue);\n        if (qKey !== undefined) this.removeFilter(qKey);\n      } //  this.makeSearch();\n\n    };\n\n    this.removeAllFilters = () => {\n      var filterObj = this.state.filters;\n      filterObj = Object.fromEntries(Object.entries(filterObj).filter(([key]) => key === \"q\")); // filter all  params except for \"q\" and convert the returned array back to object\n\n      this.setState({\n        tagArray: [],\n        filters: filterObj\n      });\n      console.log(this.state.filters);\n    };\n\n    this.state = {\n      items: [],\n      filters: {},\n      filtersWithMultipleQueries: [\"status\", \"location\"],\n      resultCount: 0,\n      tagArray: [],\n      urlParams: new URLSearchParams(props.location.search),\n      minAndMaxPrice: undefined\n    };\n  }\n\n  componentDidMount() {\n    let params = this.getFiltersOnMount();\n    console.log(this.state.filters);\n    var queryString = \"\";\n    Object.entries(params).forEach(([key, value]) => queryString += `${key}=${value}&`);\n    if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n    console.log(queryString);\n    let query = `/search?${queryString}`;\n    instanceAxs.get(query).then(response => {\n      console.log(\"Search response\", response);\n      var minPrice = response.data.additional.minPrice;\n      var maxPrice = response.data.additional.maxPrice;\n\n      if (response.data.status) {\n        var returnedItems = response.data.items;\n        this.setState({\n          items: returnedItems,\n          resultCount: returnedItems.length,\n          minAndMaxPrice: {\n            minPrice: minPrice,\n            maxPrice: maxPrice\n          }\n        });\n        this.props.history.push(`/search?${queryString}`);\n        console.log(this.state);\n      } else {\n        return console.log(response.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid searchResultPageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchFilterComponents\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.makeSearch,\n          children: \"Bruk Endringer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary \",\n          onClick: () => console.log(this.state.filters),\n          children: \"Lagre S\\xF8k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.removeAllFilters,\n          children: \"Fjerne Filtre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), this.state.minAndMaxPrice !== undefined && /*#__PURE__*/_jsxDEV(Price, {\n          setfilter: this.setFilter,\n          priceObject: this.state.minAndMaxPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          setfilter: this.setFilter,\n          removeFilter: this.removeFilter,\n          checkedState: this.state.filters[\"status\"] !== undefined && this.state.filters[\"status\"] !== null && this.state.filters[\"status\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchResults_Order \",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: [this.state.resultCount, \" treff\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                style: {\n                  width: 200\n                },\n                name: \"cars\",\n                id: \"cars\",\n                onChange: this.setSortingCategory,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"published\",\n                  children: \"Publisert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"price_desc\",\n                  children: \"Pris lav til h\\xF8y\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"price_asc\",\n                  children: \"Pris h\\xF8y til lav\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterTagsContainer\",\n            children: this.state.tagArray.map(tag => {\n              return /*#__PURE__*/_jsxDEV(Tags, {\n                tag: tag,\n                removeTag: this.removeTag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Items\",\n          children: this.state.items.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"itemCol\",\n                children: /*#__PURE__*/_jsxDEV(ProductCard, {\n                  img: item.annonce.images,\n                  price: item.annonce.price,\n                  name: item.annonce.title,\n                  id: item.annonce._id\n                }, item.annonce._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPrice.defaultProps = {\n  priceObject: {\n    minPrice: 0,\n    maxPrice: 50\n  }\n};\nexport default SearchResult;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/SearchResult.js"],"names":["React","ProductCard","instanceAxs","Price","Status","Tags","SearchResult","Component","constructor","props","setSortingCategory","e","sorting","target","value","setFilter","getFiltersOnMount","urlParams","state","params","key","console","log","setState","filters","makeSearch","queryString","Object","entries","forEach","length","slice","query","get","then","response","data","status","returnedItems","items","resultCount","window","history","pushState","message","catch","err","addFilterTag","queryKey","queryValue","tagArr","tagArray","object","find","obj","objIndex","indexOf","push","filter","tagKey","tagValue","queryFilters","multipleQueryFilters","filtersWithMultipleQueries","includes","qValue","undefined","trim","removeFilter","qFilter","newQueryFilter","String","replace","removeTag","qKey","x","index","splice","removeAllFilters","filterObj","fromEntries","URLSearchParams","location","search","minAndMaxPrice","componentDidMount","minPrice","additional","maxPrice","render","margin","width","map","tag","item","annonce","images","price","title","_id","defaultProps","priceObject"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./SearchResult.css\";\r\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\r\nimport { instanceAxs } from \"../../api/Api\";\r\n// import Date from \"./FilterComponents/Date\";\r\nimport Price from \"./FilterComponents/Price\";\r\nimport Status from \"./FilterComponents/Status\";\r\nimport Tags from \"./FilterComponents/Tags.js\";\r\n/* \r\nfiltersWithMultipleParams = [\"status\",\"location\"];\r\nfilter = {'price_max': 89000, 'status': 'used new'}\r\ntag = [\r\n{key: \"statusUsed\",value: \"Used\", filterKey: 'status', filterValue:'used'}, \r\n{key: \"statusNew\", value: \"New\", filterKey: 'status', filterValue: 'new'},\r\n{key: \"maxPrice\", value: \"til 1800\", filterKey: 'price_max', filterValue: 1800}\r\n]\r\n\r\naddFilter(filterKey, filterValue, tagKey, tagValue){\r\n  filter = {filterKey, filterValue}\r\n  addTag(filterKey, filterValue, tagKey, tagValue)\r\n}\r\nremoveFilter(filterKey, filterValue){\r\n  var filterObject = filter.find(filterKey);\r\n  if(filtersWithMultipleparams[filterObject] !== -1){\r\n    remove(filterObject.value.filterValue)\r\n    if(filterObject.value === ''){\r\n      remove(filterObject)\r\n    }\r\n  } else {\r\n    remove(filterObject)\r\n  }\r\n}\r\naddTag(filterKey, filterValue, tagKey, tagValue){\r\n  tag = {key: tagKey, value: tagValue, filterKey, filterValue}\r\n}\r\nremoveTag(tagKey,filterKey, filterValue){\r\n  tag.remove(tagKey)\r\n  this.removeFilter(filterKey, filterValue)\r\n}\r\n*/\r\nclass SearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      filters: {},\r\n      filtersWithMultipleQueries: [\"status\",\"location\"],\r\n      resultCount: 0,\r\n      tagArray: [],\r\n      urlParams: new URLSearchParams(props.location.search),\r\n      minAndMaxPrice: undefined,\r\n    };\r\n  }\r\n  setSortingCategory = (e) => {\r\n    var sorting = e.target.value;\r\n    this.setFilter(\"order\", sorting, sorting);\r\n  };\r\n\r\n  getFiltersOnMount = () => {\r\n    let urlParams = this.state.urlParams;\r\n    let params = {};\r\n    for (const [key, value] of urlParams) {\r\n      params[key] = value;\r\n      console.log({ key, value });\r\n    }\r\n    this.setState({\r\n      filters: params,\r\n    });\r\n    console.log(params);\r\n    return params;\r\n  };\r\n\r\n  makeSearch = () => {\r\n    let filters = this.state.filters;\r\n    var queryString = \"\";\r\n    Object.entries(filters).forEach(\r\n      ([key, value]) => (queryString += `${key}=${value}&`)\r\n    );\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n\r\n    console.log(queryString);\r\n    let query = `/search?${queryString}`;\r\n    instanceAxs\r\n      .get(query)\r\n      .then((response) => {\r\n        console.log(\"Search response\", response);\r\n        if (response.data.status) {\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: returnedItems.length,\r\n          });\r\n          window.history.pushState(\"page2\", \"seach made\", query);\r\n        } else {\r\n          return console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addFilterTag = (key, value, queryKey, queryValue) => {\r\n    let tagArr = this.state.tagArray;\r\n    var object = tagArr.find((obj) => obj.key === key);\r\n    var objIndex = tagArr.indexOf(object);\r\n    if (objIndex !== -1) {\r\n      tagArr[objIndex] = {\r\n        key: key,\r\n        value: value,\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n      };\r\n    } else {\r\n      tagArr.push({\r\n        key: key,\r\n        value: value,\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n      });\r\n    }\r\n    this.setState({\r\n      tagArr: tagArr,\r\n    });\r\n  };\r\n\r\n  setFilter = (filter, queryValue, tagKey, tagValue) => {\r\n    var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n\r\n    if(multipleQueryFilters.includes(filter,0)){\r\n      var qValue = queryFilters[filter];\r\n      if(qValue === undefined || qValue === null) qValue = '';\r\n\r\n      if(!qValue.includes(queryValue)) qValue += \" \" + queryValue;\r\n      qValue = qValue.trim();\r\n      queryFilters[filter] = qValue;\r\n      \r\n    } else {\r\n      queryFilters[filter] = queryValue;\r\n    }\r\n\r\n    this.setState({\r\n      filters: queryFilters\r\n    })\r\n\r\n    this.addFilterTag(tagKey,tagValue,filter,queryValue);\r\n\r\n    /* if (filter === \"status\") {\r\n      let val = parameters[\"status\"];\r\n      if (val === undefined || val === null) val = \"\";\r\n      if (!val.includes(queryValue)) val += \" \" + queryValue;\r\n      val = val.trim();\r\n      parameters[\"status\"] = val;\r\n      this.addFilterTag(tagKey, tagValue, filter, queryValue);\r\n      this.setState({\r\n        filters: parameters,\r\n      });\r\n    } else {\r\n      parameters[filter] = queryValue;\r\n      this.addFilterTag(tagKey, tagValue, filter, queryValue);\r\n      this.setState({\r\n        filters: parameters,\r\n      });\r\n    } */\r\n  };\r\n\r\n  removeFilter = (filter, queryValue) => {\r\n    // remove a filter completely or erase a prop of it\r\n    var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n    var qValue = queryValue || undefined;\r\n\r\n    if(multipleQueryFilters.includes(filter)){\r\n      if(queryFilters[filter] !== undefined && queryFilters[filter] !== null && qValue !== undefined){\r\n        var qFilter = queryFilters[filter];\r\n        console.log(\"qFilter: \", qFilter);\r\n        var newQueryFilter = String(qFilter).replace(qValue, '');\r\n        newQueryFilter = newQueryFilter.trim();\r\n        console.log(\"new filter\", newQueryFilter);\r\n        queryFilters[filter] = newQueryFilter;\r\n        if(queryFilters[filter] === '') {\r\n          delete queryFilters[filter]; \r\n        } \r\n      }\r\n    } else {\r\n      if(queryFilters[filter] !== undefined && queryFilters[filter] !== null) {\r\n        delete queryFilters[filter];\r\n      }\r\n    }\r\n    this.setState({\r\n      filters:queryFilters\r\n    })\r\n    /* var prop = property || undefined;\r\n    var params = this.state.filters;\r\n    if (filterOrProp === \"prop\") {\r\n      if (\r\n        params[filter] !== undefined &&\r\n        params[filter] !== null &&\r\n        prop !== undefined\r\n      ) {\r\n        let parameter = params[filter];\r\n        console.log(\"parameter\", parameter)\r\n        let newparameter = String(parameter).replace(prop, \"\");\r\n        newparameter = newparameter.trim();\r\n        console.log(\"new parameter\", newparameter);\r\n        params[filter] = newparameter;\r\n        if (params[filter] === \"\") delete this.state.filters[filter];\r\n        console.log(this.state.filters);\r\n      }\r\n    } else {\r\n      if (params[filter] !== undefined && params[filter] !== null) {\r\n        delete this.state.filters[filter];\r\n        console.log(this.state.filters);\r\n      }\r\n    } */\r\n  };\r\n\r\n  removeTag = (key, queryKey) => {\r\n    var tagArray = this.state.tagArray;\r\n    var qKey = queryKey || undefined;\r\n    let obj = tagArray.find((x) => x.key === key);\r\n    if(obj !== undefined){\r\n      let index = tagArray.indexOf(obj);\r\n      tagArray.splice(index, 1);\r\n      this.setState({ tagArray });\r\n      this.removeFilter(obj.queryKey, obj.queryValue);\r\n      if(qKey !== undefined) this.removeFilter(qKey);\r\n    }\r\n    \r\n    //  this.makeSearch();\r\n  };\r\n\r\n  removeAllFilters = () => {\r\n    var filterObj = this.state.filters;\r\n    filterObj = Object.fromEntries(\r\n      Object.entries(filterObj).filter(([key]) => key === \"q\")\r\n    ); // filter all  params except for \"q\" and convert the returned array back to object\r\n    this.setState({\r\n      tagArray: [],\r\n      filters: filterObj,\r\n    });\r\n    console.log(this.state.filters);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let params = this.getFiltersOnMount();\r\n    console.log(this.state.filters);\r\n    var queryString = \"\";\r\n    Object.entries(params).forEach(\r\n      ([key, value]) => (queryString += `${key}=${value}&`)\r\n    );\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n\r\n    console.log(queryString);\r\n    let query = `/search?${queryString}`;\r\n    instanceAxs\r\n      .get(query)\r\n      .then((response) => {\r\n        console.log(\"Search response\", response);\r\n        var minPrice = response.data.additional.minPrice;\r\n        var maxPrice = response.data.additional.maxPrice;\r\n        if (response.data.status) {\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: returnedItems.length,\r\n            minAndMaxPrice: { minPrice: minPrice, maxPrice: maxPrice },\r\n          });\r\n\r\n          this.props.history.push(`/search?${queryString}`);\r\n          console.log(this.state);\r\n        } else {\r\n          return console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid searchResultPageContainer\">\r\n        <div className=\"searchFilterComponents\">\r\n          <button className=\"btn btn-primary\" onClick={this.makeSearch}>\r\n            Bruk Endringer\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary \"\r\n            onClick={() => console.log(this.state.filters)}\r\n          >\r\n            Lagre Søk\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={this.removeAllFilters}>\r\n            Fjerne Filtre\r\n          </button>\r\n          {this.state.minAndMaxPrice !== undefined && (\r\n            <Price\r\n              setfilter={this.setFilter}\r\n              priceObject={this.state.minAndMaxPrice}\r\n            />\r\n          )}\r\n          <Status\r\n            setfilter={this.setFilter}\r\n            removeFilter={this.removeFilter}\r\n            checkedState={this.state.filters[\"status\"] !== undefined && this.state.filters[\"status\"] !== null && this.state.filters[\"status\"]}\r\n          ></Status>\r\n        </div>\r\n        <div className=\"searchResults\">\r\n          <div className=\"searchResults_Info\">\r\n            <div className=\"searchResults_Order \">\r\n              <p style={{ margin: 0 }}>{this.state.resultCount} treff</p>\r\n\r\n              <div>\r\n                <select\r\n                  className=\"form-control\"\r\n                  style={{ width: 200 }}\r\n                  name=\"cars\"\r\n                  id=\"cars\"\r\n                  onChange={this.setSortingCategory}\r\n                >\r\n                  <option value=\"published\">Publisert</option>\r\n                  <option value=\"price_desc\">Pris lav til høy</option>\r\n                  <option value=\"price_asc\">Pris høy til lav</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"filterTagsContainer\">\r\n              {this.state.tagArray.map((tag) => {\r\n                return <Tags tag={tag} removeTag={this.removeTag} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"searchResults_Items\">\r\n            {this.state.items.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"itemCol\">\r\n                    <ProductCard\r\n                      key={item.annonce._id}\r\n                      img={item.annonce.images}\r\n                      price={item.annonce.price}\r\n                      name={item.annonce.title}\r\n                      id={item.annonce._id}\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPrice.defaultProps = {\r\n  priceObject: { minPrice: 0, maxPrice: 50 },\r\n};\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}