{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/es/storage';\n/*\nimport sessionStorage from 'redux-persist/es/storage/session'; */\n\nimport { combineReducers } from 'redux';\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nconst persistConfig = {\n  key: 'root',\n  storage: localStorage // blacklist: ['filters']\n\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged', 'user']\n};\nconst rootReducer = combineReducers({\n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchReducer\n});\nexport const loadState = () => {\n  try {\n    const localState = localStorage.getItem('state');\n    console.log(typeof localState);\n\n    if (state === null) {\n      console.log(\"undefined\");\n      return undefined;\n    }\n\n    return state;\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    console.log(typeof state);\n    var stateData = JSON.stringify(state);\n    console.log(typeof stateData);\n    localStorage.setItem(\"state\", stateData);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","localStorage","combineReducers","LoginReducer","userReducer","SearchReducer","persistConfig","key","storage","sessionConfig","sessionStorage","blacklist","rootReducer","isLogged","user","filters","loadState","localState","getItem","console","log","state","undefined","err","saveState","stateData","JSON","stringify","setItem","persistedState","persistedReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACC,OAAOC,YAAP,MAAyB,0BAAzB;AAAoD;AACrD;;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEP,YAFW,CAGpB;;AAHoB,CAAtB;AAMA,OAAO,MAAMQ,aAAa,GAAG;AAC3BF,EAAAA,GAAG,EAAE,MADsB;AAE3BC,EAAAA,OAAO,EAAEE,cAFkB;AAG3BC,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAY,MAAZ;AAHgB,CAAtB;AAMP,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,QAAQ,EAAEV,YADwB;AAElCW,EAAAA,IAAI,EAAEV,WAF4B;AAGlC;AACAW,EAAAA,OAAO,EAAEV;AAJyB,CAAD,CAAnC;AAOA,OAAO,MAAMW,SAAS,GAAG,MAAM;AAC7B,MAAI;AACF,UAAMC,UAAU,GAAGhB,YAAY,CAACiB,OAAb,CAAqB,OAArB,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,UAAnB;;AACA,QAAII,KAAK,KAAK,IAAd,EAAoB;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAOE,SAAP;AACD;;AAGD,WAAOD,KAAP;AACD,GAVD,CAUE,OAAME,GAAN,EAAW;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAOD,SAAP;AACD;AACF,CAfM;AAiBP,OAAO,MAAME,SAAS,GAAIH,KAAD,IAAW;AAChC,MAAI;AACFF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOC,KAAnB;AACA,QAAII,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAhB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOK,SAAnB;AACAxB,IAAAA,YAAY,CAAC2B,OAAb,CAAqB,OAArB,EAA6BH,SAA7B;AACD,GALD,CAKE,OAAOF,GAAP,EAAY;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD;AACJ,CATM;AAWP,OAAO,MAAMM,cAAc,GAAGb,SAAS,EAAhC;AACP,OAAO,MAAMc,gBAAgB,GAAG9B,cAAc,CAACM,aAAD,EAAgBM,WAAhB,CAAvC","sourcesContent":["import { persistReducer } from 'redux-persist'\n import localStorage from 'redux-persist/es/storage';/*\nimport sessionStorage from 'redux-persist/es/storage/session'; */\nimport { combineReducers } from 'redux';\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage: localStorage,\n  // blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged','user']\n}\n\nconst rootReducer = combineReducers({ \n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchReducer\n}); \n\nexport const loadState = () => {\n  try {\n    const localState = localStorage.getItem('state');\n    console.log(typeof localState)\n    if (state === null) {\n      console.log(\"undefined\")\n      return undefined;\n    } \n    \n\n    return state;\n  } catch(err) {\n    console.log(err); \n    return undefined;\n  }\n}\n  \nexport const saveState = (state) => {\n    try {\n      console.log(typeof state)\n      var stateData = JSON.stringify(state);\n      console.log(typeof stateData)\n      localStorage.setItem(\"state\",stateData)\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}