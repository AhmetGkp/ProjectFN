{"ast":null,"code":"import axios from 'axios';\nimport { serverApi } from '../config/cfg.js';\nvar isLoggedIn = false;\nconst instanceAxs = axios.create({\n  baseURL: serverApi,\n  withCredentials: true\n});\n\nconst login = async user => {\n  instanceAxs.post('/login', user).then(response => {\n    console.log(response);\n    this.props.history.push('/');\n  });\n};\n\nconst checkLogin = async () => {\n  await instanceAxs.get('/checklogin').then(result => {\n    let response = result.data.message;\n\n    if (response === \"user logged in\") {\n      isLoggedIn = true;\n    } else {\n      isLoggedIn = false;\n    }\n\n    console.log(result);\n    return response;\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport { isLoggedIn, instanceAxs, checkLogin };","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/api/Api.js"],"names":["axios","serverApi","isLoggedIn","instanceAxs","create","baseURL","withCredentials","login","user","post","then","response","console","log","props","history","push","checkLogin","get","result","data","message","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,IAAIC,UAAU,GAAG,KAAjB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEJ,SADoB;AAE7BK,EAAAA,eAAe,EAAE;AAFY,CAAb,CAApB;;AAKA,MAAMC,KAAK,GAAG,MAAOC,IAAP,IAAgB;AAC1BL,EAAAA,WAAW,CAACM,IAAZ,CAAiB,QAAjB,EAA2BD,IAA3B,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,GAJL;AAKH,CAND;;AAOA,MAAMC,UAAU,GAAG,YAAY;AAC3B,QAAMd,WAAW,CAACe,GAAZ,CAAgB,aAAhB,EACDR,IADC,CACIS,MAAM,IAAI;AACZ,QAAIR,QAAQ,GAAGQ,MAAM,CAACC,IAAP,CAAYC,OAA3B;;AAEA,QAAIV,QAAQ,KAAK,gBAAjB,EAAkC;AAC9BT,MAAAA,UAAU,GAAG,IAAb;AACH,KAFD,MAEO;AACHA,MAAAA,UAAU,GAAG,KAAb;AACH;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,WAAOR,QAAP;AACH,GAXC,EAYDW,KAZC,CAYKC,GAAG,IAAI;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACH,GAdC,CAAN;AAeH,CAhBD;;AAkBA,SAAQrB,UAAR,EAAoBC,WAApB,EAAiCc,UAAjC","sourcesContent":["import axios from 'axios';\n\nimport { serverApi } from '../config/cfg.js';\n\nvar isLoggedIn = false;\n\nconst instanceAxs = axios.create({\n    baseURL: serverApi,\n    withCredentials: true\n});\n\nconst login = async (user) => {\n    instanceAxs.post('/login', user)\n        .then(response => {\n            console.log(response)\n            this.props.history.push('/');\n        })   \n}\nconst checkLogin = async () => {\n    await instanceAxs.get('/checklogin')\n        .then(result => {\n            let response = result.data.message;\n\n            if (response === \"user logged in\"){\n                isLoggedIn = true;\n            } else {\n                isLoggedIn = false;\n            }\n            console.log(result);\n            return response;\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\nexport {isLoggedIn, instanceAxs, checkLogin};"]},"metadata":{},"sourceType":"module"}