{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/redux/redux.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Redux() {\n  _s();\n\n  // State: a counter value\n  const [counter, setCounter] = useState(0); // Action: code that causes an update to the state when something happens\n\n  const increment = () => {\n    setCounter(prevCounter => prevCounter + 1);\n  };\n\n  const adding = () => {\n    return {\n      type: 'todos/todoAdded',\n      payload: text\n    };\n  }; // View: the UI definition\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Value: \", counter, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Redux, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = Redux;\nexport default Redux;\n\nvar _c;\n\n$RefreshReg$(_c, \"Redux\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/redux/redux.js"],"names":["useState","createStore","useSelector","useDispatch","Redux","counter","setCounter","increment","prevCounter","adding","type","payload","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC,CAFa,CAIb;;AACA,QAAMO,SAAS,GAAG,MAAM;AACtBD,IAAAA,UAAU,CAACE,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAV;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACjB,WAAO;AACLC,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEC;AAFJ,KAAP;AAIH,GALD,CATa,CAgBb;;;AACA,sBACE;AAAA,0BACUP,OADV,oBACmB;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBMH,K;;KAAAA,K;AAwBT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\"\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Redux() {\n    // State: a counter value\n    const [counter, setCounter] = useState(0)\n  \n    // Action: code that causes an update to the state when something happens\n    const increment = () => {\n      setCounter(prevCounter => prevCounter + 1)\n    }\n\n    const adding = () => {\n        return {\n          type: 'todos/todoAdded',\n          payload: text\n        }\n    }\n  \n    // View: the UI definition\n    return (\n      <div>\n        Value: {counter} <button onClick={increment}>Increment</button>\n      </div>\n    )\n  }\n\nexport default Redux;"]},"metadata":{},"sourceType":"module"}