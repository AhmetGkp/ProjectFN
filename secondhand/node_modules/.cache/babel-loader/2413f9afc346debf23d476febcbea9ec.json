{"ast":null,"code":"import { persistReducer } from 'redux-persist';\n/* import localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session'; */\n\nimport { combineReducers } from 'redux';\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nconst persistConfig = {\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged', 'user']\n};\nconst rootReducer = combineReducers({\n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchReducer\n});\nexport const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n\n    if (state === null) {\n      return undefined;\n    }\n\n    return JSON.parse(state);\n    ;\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    var stateData = JSON.stringify(state);\n    localStorage.setItem(\"localData\", stateData);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","combineReducers","LoginReducer","userReducer","SearchReducer","persistConfig","key","storage","localStorage","blacklist","sessionConfig","sessionStorage","rootReducer","isLogged","user","filters","loadState","state","getItem","undefined","JSON","parse","err","console","log","saveState","stateData","stringify","setItem","persistedState","persistedReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA;AACA;;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEC,YAFW;AAGpBC,EAAAA,SAAS,EAAE,CAAC,SAAD;AAHS,CAAtB;AAMA,OAAO,MAAMC,aAAa,GAAG;AAC3BJ,EAAAA,GAAG,EAAE,MADsB;AAE3BC,EAAAA,OAAO,EAAEI,cAFkB;AAG3BF,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAY,MAAZ;AAHgB,CAAtB;AAMP,MAAMG,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,QAAQ,EAAEX,YADwB;AAElCY,EAAAA,IAAI,EAAEX,WAF4B;AAGlC;AACAY,EAAAA,OAAO,EAAEX;AAJyB,CAAD,CAAnC;AAOA,OAAO,MAAMY,SAAS,GAAG,MAAM;AAC7B,MAAI;AACF,UAAMC,KAAK,GAAGT,YAAY,CAACU,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAOE,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAP;AAAyB;AAC1B,GAPD,CAOE,OAAMK,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOH,SAAP;AACD;AACF,CAZM;AAcP,OAAO,MAAMM,SAAS,GAAIR,KAAD,IAAW;AAChC,MAAI;AACF,QAAIS,SAAS,GAAGN,IAAI,CAACO,SAAL,CAAeV,KAAf,CAAhB;AACAT,IAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAiCF,SAAjC;AACD,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACJ,CAPM;AASP,OAAO,MAAMO,cAAc,GAAGb,SAAS,EAAhC;AACP,OAAO,MAAMc,gBAAgB,GAAG9B,cAAc,CAACK,aAAD,EAAgBO,WAAhB,CAAvC","sourcesContent":["import { persistReducer } from 'redux-persist'\n/* import localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session'; */\nimport { combineReducers } from 'redux';\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged','user']\n}\n\nconst rootReducer = combineReducers({ \n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchReducer\n}); \n\nexport const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n\n    if (state === null) {\n      return undefined;\n    } \n    return JSON.parse(state);;\n  } catch(err) {\n    console.log(err); \n    return undefined;\n  }\n}\n  \nexport const saveState = (state) => {\n    try {\n      var stateData = JSON.stringify(state);\n      localStorage.setItem(\"localData\",stateData)\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}