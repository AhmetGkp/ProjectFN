{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux'; // import { rootReducer } from '../reducers/rootReducer'\n\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage\n};\nconst rootReducer = combineReducers({\n  user: persistReducer(authPersistConfig, userReducer),\n  // user subtree saved in session storage\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\n\nconst loadSessionState = () => {\n  try {\n    const serializedSessionState = window.sessionStorage.getItem('sessionData');\n\n    if (serializedSessionState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedSessionState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nconst saveSessionState = sessionState => {\n  try {\n    const serializedSessionState = JSON.stringify(sessionState);\n    window.sessionStorage.setItem(\"sessionData\", serializedSessionState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = window.localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    window.localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","localStorage","sessionStorage","combineReducers","LoginReducer","userReducer","SearchReducer","persistConfig","key","storage","blacklist","sessionConfig","rootReducer","user","authPersistConfig","cart","cartReducer","directory","directoryReducer","shop","shopReducer","loadSessionState","serializedSessionState","window","getItem","undefined","JSON","parse","err","console","log","saveSessionState","sessionState","stringify","setItem","loadState","serializedState","saveState","state","persistedState","persistedReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpBC,EAAAA,OAAO,EAAER,YAHW;AAIpBS,EAAAA,SAAS,EAAE,CAAC,SAAD;AAJS,CAAtB;AAOA,OAAO,MAAMC,aAAa,GAAG;AAC3BH,EAAAA,GAAG,EAAE,MADsB;AAE3BC,EAAAA,OAAO,EAAEP;AAFkB,CAAtB;AAKP,MAAMU,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAAEb,cAAc,CAACc,iBAAD,EAAmBT,WAAnB,CADc;AACmB;AACrDU,EAAAA,IAAI,EAAEC,WAF4B;AAGlCC,EAAAA,SAAS,EAAEC,gBAHuB;AAIlCC,EAAAA,IAAI,EAAEC;AAJ4B,CAAD,CAAnC;;AAMA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,MAAI;AACF,UAAMC,sBAAsB,GAAGC,MAAM,CAACrB,cAAP,CAAsBsB,OAAtB,CAA8B,aAA9B,CAA/B;;AACA,QAAIF,sBAAsB,KAAK,IAA/B,EAAqC;AACnC,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,sBAAX,CAAP;AACD,GAND,CAME,OAAMM,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOH,SAAP;AACD;AACF,CAXD;;AAaA,MAAMM,gBAAgB,GAAIC,YAAD,IAAkB;AACzC,MAAI;AACF,UAAMV,sBAAsB,GAAGI,IAAI,CAACO,SAAL,CAAeD,YAAf,CAA/B;AACAT,IAAAA,MAAM,CAACrB,cAAP,CAAsBgC,OAAtB,CAA8B,aAA9B,EAA6CZ,sBAA7C;AACD,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAPD;;AASA,MAAMO,SAAS,GAAG,MAAM;AACpB,MAAI;AACF,UAAMC,eAAe,GAAGb,MAAM,CAACtB,YAAP,CAAoBuB,OAApB,CAA4B,OAA5B,CAAxB;;AAEA,QAAGY,eAAe,KAAK,IAAvB,EAA6B;AAC3B,aAAOX,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWS,eAAX,CAAP;AACD,GAPD,CAOE,OAAOR,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOH,SAAP;AACD;AACJ,CAZD;;AAcA,OAAO,MAAMY,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAI;AACF,UAAMF,eAAe,GAAGV,IAAI,CAACO,SAAL,CAAeK,KAAf,CAAxB;AACAf,IAAAA,MAAM,CAACtB,YAAP,CAAoBiC,OAApB,CAA4B,OAA5B,EAAqCE,eAArC;AACD,GAHD,CAGE,OAAOR,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACJ,CAPM;AASP,OAAO,MAAMW,cAAc,GAAGlB,gBAAgB,EAAvC;AACP,OAAO,MAAMmB,gBAAgB,GAAGxC,cAAc,CAACO,aAAD,EAAgBK,WAAhB,CAAvC","sourcesContent":["import { persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux';\n// import { rootReducer } from '../reducers/rootReducer'\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\n\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage\n}\n\nconst rootReducer = combineReducers({ \n  user: persistReducer(authPersistConfig,userReducer), // user subtree saved in session storage\n  cart: cartReducer, \n  directory: directoryReducer, \n  shop: shopReducer }); \n\nconst loadSessionState = () => {\n  try {\n    const serializedSessionState = window.sessionStorage.getItem('sessionData');\n    if (serializedSessionState === null) {\n      return undefined;\n    } \n    return JSON.parse(serializedSessionState);\n  } catch(err) {\n    console.log(err);\n    return undefined;\n  }\n}\n\nconst saveSessionState = (sessionState) => {\n  try {\n    const serializedSessionState = JSON.stringify(sessionState);\n    window.sessionStorage.setItem(\"sessionData\", serializedSessionState);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst loadState = () => {\n    try {\n      const serializedState = window.localStorage.getItem('state');\n      \n      if(serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      console.log(err);\n      return undefined;\n    }\n};\n  \nexport const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      window.localStorage.setItem('state', serializedState);\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}