{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux'; // import { rootReducer } from '../reducers/rootReducer'\n\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nimport SearchResult from '../Pages/SearchedResultPage/SearchResult';\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged', 'user']\n};\nconst rootReducer = combineReducers({\n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchResult\n});\nexport const loadSessionState = () => {\n  try {\n    /* const serializedLocalState = window.localStorage.getItem('persist:root');\n     if (serializedLocalState === null) {\n      return undefined;\n    } \n    var localData = JSON.parse(serializedLocalState);\n    console.log(localData)\n    return JSON.parse(serializedLocalState);; */\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    var userData = JSON.stringify(state.user);\n    var isLoggedData = JSON.stringify(state.isLogged);\n    var filtersData = JSON.stringify(state.filters);\n    sessionStorage.setItem(\"sessionData\", filtersData);\n    localStorage.setItem(\"localData\", userData);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","localStorage","sessionStorage","combineReducers","LoginReducer","userReducer","SearchReducer","SearchResult","persistConfig","key","storage","blacklist","sessionConfig","rootReducer","isLogged","user","filters","loadSessionState","err","console","log","undefined","saveState","state","userData","JSON","stringify","isLoggedData","filtersData","setItem","persistedState","persistedReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpBC,EAAAA,OAAO,EAAET,YAHW;AAIpBU,EAAAA,SAAS,EAAE,CAAC,SAAD;AAJS,CAAtB;AAOA,OAAO,MAAMC,aAAa,GAAG;AAC3BH,EAAAA,GAAG,EAAE,MADsB;AAE3BC,EAAAA,OAAO,EAAER,cAFkB;AAG3BS,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAY,MAAZ;AAHgB,CAAtB;AAMP,MAAME,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,QAAQ,EAAEV,YADwB;AAElCW,EAAAA,IAAI,EAAEV,WAF4B;AAGlC;AACAW,EAAAA,OAAO,EAAET;AAJyB,CAAD,CAAnC;AAOA,OAAO,MAAMU,gBAAgB,GAAG,MAAM;AACpC,MAAI;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AAEG,GATD,CASE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOG,SAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAI;AACF,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACR,IAArB,CAAf;AACA,QAAIY,YAAY,GAAGF,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACT,QAArB,CAAnB;AACA,QAAIc,WAAW,GAAGH,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACP,OAArB,CAAlB;AACAd,IAAAA,cAAc,CAAC2B,OAAf,CAAuB,aAAvB,EAAsCD,WAAtC;AACA3B,IAAAA,YAAY,CAAC4B,OAAb,CAAqB,WAArB,EAAiCL,QAAjC;AACD,GAND,CAME,OAAON,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACJ,CAVM;AAYP,OAAO,MAAMY,cAAc,GAAGb,gBAAgB,EAAvC;AACP,OAAO,MAAMc,gBAAgB,GAAG/B,cAAc,CAACQ,aAAD,EAAgBK,WAAhB,CAAvC","sourcesContent":["import { persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux';\n// import { rootReducer } from '../reducers/rootReducer'\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nimport SearchResult from '../Pages/SearchedResultPage/SearchResult';\n\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged','user']\n}\n\nconst rootReducer = combineReducers({ \n  isLogged: LoginReducer,\n  user: userReducer,\n  // filters: persistReducer(sessionConfig, SearchReducer)\n  filters: SearchResult\n}); \n\nexport const loadSessionState = () => {\n  try {\n    /* const serializedLocalState = window.localStorage.getItem('persist:root');\n\n    if (serializedLocalState === null) {\n      return undefined;\n    } \n    var localData = JSON.parse(serializedLocalState);\n    console.log(localData)\n    return JSON.parse(serializedLocalState);; */\n  } catch(err) {\n    console.log(err); \n    return undefined;\n  }\n}\n  \nexport const saveState = (state) => {\n    try {\n      var userData = JSON.stringify(state.user);\n      var isLoggedData = JSON.stringify(state.isLogged);\n      var filtersData = JSON.stringify(state.filters);\n      sessionStorage.setItem(\"sessionData\", filtersData)\n      localStorage.setItem(\"localData\",userData)\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}