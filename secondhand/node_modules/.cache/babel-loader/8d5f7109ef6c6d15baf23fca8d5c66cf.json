{"ast":null,"code":"import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport { rootReducer } from '../reducers/rootReducer';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {// Ignore write errors;\n  }\n};\n\nconst persistedState = loadState();\nconst store = createStore(persistedState // Others reducers...\n);\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default (() => {});","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/configureStore.js"],"names":["createStore","persistStore","persistReducer","storage","rootReducer","persistConfig","key","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","e","saveState","state","stringify","setItem","persistedState","store","persistedReducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAEhD,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBH,EAAAA;AAFoB,CAAtB;;AAKA,MAAMI,SAAS,GAAG,MAAM;AACpB,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAGF,eAAe,KAAK,IAAvB,EAA6B;AAC3B,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACV,WAAOH,SAAP;AACD;AACF,CAVH;;AAYE,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACF,UAAMR,eAAe,GAAGI,IAAI,CAACK,SAAL,CAAeD,KAAf,CAAxB;AACAP,IAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BV,eAA9B;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU,CACV;AACD;AACF,CAPD;;AASA,MAAMK,cAAc,GAAGZ,SAAS,EAAhC;AAGA,MAAMa,KAAK,GAAGpB,WAAW,CACvBmB,cADuB,CAEvB;AAFuB,CAAzB;AAKF,OAAO,MAAME,gBAAgB,GAAGnB,cAAc,CAACG,aAAD,EAAgBD,WAAhB,CAAvC;AAEP,gBAAe,MAAM,CAEpB,CAFD","sourcesContent":["import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport { rootReducer } from '../reducers/rootReducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('state');\n      if(serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (e) {\n      return undefined;\n    }\n  };\n  \n  const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n    } catch (e) {\n      // Ignore write errors;\n    }\n  };\n  \n  const persistedState = loadState();\n  \n  \n  const store = createStore(\n    persistedState,\n    // Others reducers...\n  );\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default () => {\n  \n}"]},"metadata":{},"sourceType":"module"}