{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\nconst isLoggedReducer = async (state = false, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      await instanceAxs.post('/login', action.payload).then(response => {\n        console.log(action.payload);\n        const message = response.data.message;\n        console.log(message);\n        if (message === \"user logged in\") return state = true;\n      }).catch(error => {\n        console.log(error);\n      });\n      return state;\n\n    case \"SIGN_OUT\":\n      return state = false;\n\n    default:\n      return state;\n  }\n};\n\nexport function LoggedSelector() {\n  _s();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoggedSelector;\nexport default isLoggedReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/isLoggedReducer.js"],"names":["useSelector","login","instanceAxs","isLoggedReducer","state","action","type","post","payload","then","response","console","log","message","data","catch","error","LoggedSelector","isLogged"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,MAAMC,eAAe,GAAG,OAAOC,KAAK,GAAG,KAAf,EAAsBC,MAAtB,KAAiC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,YAAMJ,WAAW,CAACK,IAAZ,CAAiB,QAAjB,EAA2BF,MAAM,CAACG,OAAlC,EACDC,IADC,CACIC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACG,OAAnB;AACA,cAAMK,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAcD,OAA9B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,YAAGA,OAAO,KAAK,gBAAf,EAAiC,OAAOT,KAAK,GAAG,IAAf;AACpC,OANC,EAODW,KAPC,CAOKC,KAAK,IAAI;AACZL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,OATC,CAAN;AAUA,aAAOZ,KAAP;;AACJ,SAAK,UAAL;AACI,aAAOA,KAAK,GAAG,KAAf;;AACJ;AACI,aAAOA,KAAP;AAhBR;AAkBH,CAnBD;;AAqBA,OAAO,SAASa,cAAT,GAAyB;AAAA;;AAC5B,SAAOjB,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACc,QAAhB,CAAlB;AACH;;GAFeD,c;UACLjB,W;;;KADKiB,c;AAIhB,eAAed,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\nconst isLoggedReducer = async (state = false, action) => {\n    switch (action.type) {\n        case \"SIGN_IN\":\n            await instanceAxs.post('/login', action.payload)\n                .then(response => {\n                    console.log(action.payload)\n                    const message = response.data.message;\n                    console.log(message)\n                    if(message === \"user logged in\") return state = true;\n                })   \n                .catch(error => {\n                    console.log(error)\n                })\n            return state;\n        case \"SIGN_OUT\":\n            return state = false\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default isLoggedReducer;"]},"metadata":{},"sourceType":"module"}