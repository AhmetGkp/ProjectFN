{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js\";\nimport React from \"react\";\nimport \"./SearchResult.css\";\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\nimport { instanceAxs } from \"../../api/Api\"; // import Date from \"./FilterComponents/Date\";\n\nimport Price from \"./FilterComponents/Price\";\nimport Status from \"./FilterComponents/Status\";\nimport Tags from \"./FilterComponents/Tags.js\";\nimport PrimarySelect from \"./ComponentSelect/PrimarySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSortingCategory = e => {\n      var queryFilters = this.state.filters;\n      var value = e.target.value;\n      var hasOrderFilter = queryFilters.find(e => e.queryKey === \"order\");\n      var index = queryFilters.indexOf(hasOrderFilter);\n\n      if (index !== -1) {\n        hasOrderFilter[\"queryValue\"] = value;\n        queryFilters[index] = hasOrderFilter;\n      } else {\n        var orderFilter = {\n          queryKey: \"order\",\n          queryValue: value\n        };\n        queryFilters.push(orderFilter);\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n      this.makeSearch();\n      /* var sorting = e.target.value;\r\n      this.setFilter(\"order\", sorting, sorting); */\n    };\n\n    this.getFiltersOnMount = () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      var params = [];\n\n      for (const [key, value] of urlParams) {\n        var filter = {};\n\n        switch (key) {\n          case 'q':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: undefined,\n              tagValue: undefined\n            };\n            params.push(filter);\n            break;\n\n          case 'order':\n            filter = {\n              queryKey: key,\n              queryValue: value\n            };\n            params.push(filter);\n            break;\n\n          case 'price_max':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"maxPrice\",\n              tagValue: `til ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'price_min':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"minPrice\",\n              tagValue: `fra ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'status':\n            if (value === \"new\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusNew\",\n                tagValue: \"Nytt\"\n              };\n            } else if (value === \"used\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusUsed\",\n                tagValue: \"Brukt\"\n              };\n            }\n\n            params.push(filter);\n            break;\n        }\n      }\n\n      this.setState({\n        filters: params\n      });\n      return params;\n    };\n\n    this.getTags = queryFilters => {\n      var filters = queryFilters === undefined ? this.state.filters : queryFilters;\n      var tags = [];\n\n      for (const filter of filters) {\n        if (filter.tagKey !== undefined) {\n          var tag = {\n            key: filter.tagKey,\n            value: filter.tagValue,\n            queryKey: filter.queryKey,\n            queryValue: filter.queryValue\n          };\n          tags.push(tag);\n        }\n      }\n\n      this.setState({\n        tagArray: tags\n      });\n      return tags;\n    };\n\n    this.makeSearch = () => {\n      let filters = this.state.filters;\n      var queryString = \"\";\n\n      for (const filter of filters) {\n        queryString += `${filter.queryKey}=${filter.queryValue}&`;\n      }\n      /* Object.entries(filters).forEach(\r\n        ([key, value]) => (queryString += `${key}=${value}&`)\r\n      ); */\n\n\n      if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n      let query = `/search?${queryString}`;\n      instanceAxs.get(query).then(response => {\n        // console.log(\"Search response\", response);\n        if (response.data.status) {\n          var returnedItems = response.data.items;\n          this.setState({\n            items: returnedItems,\n            resultCount: returnedItems.length\n          });\n          window.history.pushState(\"page2\", \"seach made\", query); // this.getFiltersOnMount();\n          // window.location.href =  query\n        } else {\n          return console.log(response.data.message);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setFilter = (queryKey, queryValue, tagKey, tagValue) => {\n      var queryFilters = this.state.filters;\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\n      var filter = queryFilters.find(element => element.tagKey === tagKey);\n      var index = queryFilters.indexOf(filter);\n\n      if (queryValue === '') {\n        if (index !== -1) {\n          queryFilters.splice(index, 1);\n          this.setState({\n            filters: queryFilters\n          });\n          this.removeTag(tagKey, queryKey);\n        }\n\n        return;\n      }\n\n      if (index === -1) {\n        var newFilter = {\n          queryKey: queryKey,\n          queryValue: queryValue,\n          tagKey: tagKey,\n          tagValue: tagValue\n        };\n        queryFilters.push(newFilter);\n        this.setState({\n          filters: queryFilters\n        });\n        this.addFilterTag(tagKey, tagValue, queryKey, queryValue);\n        return;\n      }\n\n      if (multipleQueryFilters.includes(queryKey, 0)) {\n        var qValue = filter.queryValue;\n        if (qValue === undefined || qValue === null) qValue = \"\";\n        if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\n        qValue = qValue.trim();\n        filter.queryValue = qValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, qValue);\n      } else {\n        filter.queryValue = queryValue;\n        filter.tagValue = tagValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, queryValue);\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n    };\n\n    this.addFilterTag = (key, value, queryKey, queryValue) => {\n      let tagArr = this.state.tagArray;\n      var tagObj = {};\n      var object = tagArr.find(obj => obj.key === key);\n      var objIndex = tagArr.indexOf(object);\n\n      if (objIndex !== -1) {\n        tagObj = {\n          key,\n          value: value,\n          queryKey,\n          queryValue: queryValue\n        };\n        tagArr[objIndex] = tagObj;\n      } else {\n        tagArr.push({\n          key: key,\n          value: value,\n          queryKey: queryKey,\n          queryValue: queryValue\n        });\n      }\n\n      this.setState({\n        tagArr: tagArr\n      });\n    };\n\n    this.removeFilter = (filter, queryValue) => {// remove a filter completely or erase a prop of it\n\n      /* var queryFilters = this.state.filters;\r\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n      var qValue = queryValue || undefined;\r\n        if(multipleQueryFilters.includes(filter)){\r\n        if(queryFilters[filter] !== undefined && queryFilters[filter] !== null && qValue !== undefined){\r\n            var qFilter = queryFilters[filter];\r\n          var newQueryFilter = String(qFilter).replace(qValue, '');\r\n          newQueryFilter = newQueryFilter.trim();\r\n          queryFilters[filter] = newQueryFilter;\r\n          if(queryFilters[filter] === '') {\r\n            delete queryFilters[filter]; \r\n          } \r\n        }\r\n      } else {\r\n        if(queryFilters[filter] !== undefined && queryFilters[filter] !== null) {\r\n          delete queryFilters[filter];\r\n          // this.removeTag(\"\",filter)\r\n        }\r\n      }\r\n      this.setState({\r\n        filters:queryFilters\r\n      }) \r\n      var tagArray = this.state.tagArray;\r\n          let obj = tagArray.find((x) => x.queryValue === queryValue);\r\n          if(obj !== undefined){\r\n            console.log(\"obj\")\r\n            let index = tagArray.indexOf(obj);\r\n            tagArray.splice(index, 1);\r\n            this.setState({ tagArray });\r\n          } */\n      // this.removeTag(\"\",filter)\n\n      /* var prop = property || undefined;\r\n      var params = this.state.filters;\r\n      if (filterOrProp === \"prop\") {\r\n        if (\r\n          params[filter] !== undefined &&\r\n          params[filter] !== null &&\r\n          prop !== undefined\r\n        ) {\r\n          let parameter = params[filter];\r\n          console.log(\"parameter\", parameter)\r\n          let newparameter = String(parameter).replace(prop, \"\");\r\n          newparameter = newparameter.trim();\r\n          console.log(\"new parameter\", newparameter);\r\n          params[filter] = newparameter;\r\n          if (params[filter] === \"\") delete this.state.filters[filter];\r\n          console.log(this.state.filters);\r\n        }\r\n      } else {\r\n        if (params[filter] !== undefined && params[filter] !== null) {\r\n          delete this.state.filters[filter];\r\n          console.log(this.state.filters);\r\n        }\r\n      } */\n    };\n\n    this.removeTag = (key, queryKey) => {\n      var tagArray = this.state.tagArray;\n      let obj = tagArray.find(x => x.key === key);\n\n      if (obj !== undefined) {\n        let index = tagArray.indexOf(obj);\n        tagArray.splice(index, 1);\n        this.setState({\n          tagArray\n        });\n      }\n    };\n\n    this.removeAllFilters = () => {\n      var filterObj = this.state.filters;\n      var filterArr = [];\n\n      for (const filter of filterObj) {\n        // remove all filters except for 'q'\n        if (filter.queryKey !== 'q') break;\n        filterArr.push(filter);\n      }\n\n      this.setState({\n        tagArray: [],\n        filters: filterArr\n      });\n    };\n\n    this.state = {\n      items: [],\n      filtersWithMultipleQueries: [\"status\", \"location\"],\n      resultCount: 0,\n      tagArray: [],\n      urlParams: new URLSearchParams(props.location.search),\n      filters: [{\n        queryKey: \"q\",\n        queryValue: new URLSearchParams(props.location.search).get(\"q\")\n      }],\n      minAndMaxPrice: undefined\n    };\n  }\n\n  componentDidMount() {\n    let params = this.getFiltersOnMount();\n    this.getTags(params);\n    var queryString = \"\";\n\n    for (const filter of params) {\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\n    }\n\n    if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n    let query = `/search?${queryString}`;\n    instanceAxs.get(query).then(response => {\n      // console.log(\"Search response\", response);\n      var minPrice = response.data.additional.minPrice;\n      var maxPrice = response.data.additional.maxPrice;\n\n      if (response.data.status) {\n        var returnedItems = response.data.items;\n        this.setState({\n          items: returnedItems,\n          resultCount: returnedItems.length,\n          minAndMaxPrice: {\n            minPrice: minPrice,\n            maxPrice: maxPrice\n          }\n        });\n        this.props.history.push(`/search?${queryString}`);\n      } else {\n        return console.log(response.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid searchResultPageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchFilterComponents\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.makeSearch,\n          children: \"Bruk Endringer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary \",\n          onClick: () => console.log(this.state.filters),\n          children: \"Lagre S\\xF8k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.removeAllFilters,\n          children: \"Fjerne Filtre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), this.state.minAndMaxPrice !== undefined && /*#__PURE__*/_jsxDEV(Price, {\n          setfilter: this.setFilter,\n          priceObject: this.state.minAndMaxPrice,\n          minPriceState: this.state.tagArray.find(e => e.key === \"minPrice\"),\n          maxPriceState: this.state.tagArray.find(e => e.key === \"maxPrice\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          setfilter: this.setFilter,\n          statusNewState: this.state.filters.find(e => e.tagKey === \"statusNew\"),\n          statusUsedState: this.state.filters.find(e => e.tagKey === \"statusUsed\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchResults_Order \",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: [this.state.resultCount, \" treff\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrimarySelect, {\n              setSortingCategory: this.setSortingCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterTagsContainer\",\n            children: this.state.tagArray.map(tag => {\n              return /*#__PURE__*/_jsxDEV(Tags, {\n                tag: tag,\n                setfilter: this.setFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Items\",\n          children: this.state.items.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"itemCol\",\n                children: /*#__PURE__*/_jsxDEV(ProductCard, {\n                  img: item.annonce.images,\n                  price: item.annonce.price,\n                  name: item.annonce.title,\n                  id: item.annonce._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)\n              }, item.annonce._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPrice.defaultProps = {\n  priceObject: {\n    minPrice: 0,\n    maxPrice: 50\n  }\n};\nexport default SearchResult;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/SearchResult.js"],"names":["React","ProductCard","instanceAxs","Price","Status","Tags","PrimarySelect","SearchResult","Component","constructor","props","setSortingCategory","e","queryFilters","state","filters","value","target","hasOrderFilter","find","queryKey","index","indexOf","orderFilter","queryValue","push","setState","makeSearch","getFiltersOnMount","urlParams","URLSearchParams","window","location","search","params","key","filter","tagKey","undefined","tagValue","getTags","tags","tag","tagArray","queryString","length","slice","query","get","then","response","data","status","returnedItems","items","resultCount","history","pushState","console","log","message","catch","err","setFilter","multipleQueryFilters","filtersWithMultipleQueries","element","splice","removeTag","newFilter","addFilterTag","includes","qValue","trim","tagArr","tagObj","object","obj","objIndex","removeFilter","x","removeAllFilters","filterObj","filterArr","minAndMaxPrice","componentDidMount","minPrice","additional","maxPrice","render","margin","map","item","annonce","images","price","title","_id","defaultProps","priceObject"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./SearchResult.css\";\r\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\r\nimport { instanceAxs } from \"../../api/Api\";\r\n// import Date from \"./FilterComponents/Date\";\r\nimport Price from \"./FilterComponents/Price\";\r\nimport Status from \"./FilterComponents/Status\";\r\nimport Tags from \"./FilterComponents/Tags.js\";\r\nimport PrimarySelect from \"./ComponentSelect/PrimarySelect\";\r\n\r\nclass SearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      filtersWithMultipleQueries: [\"status\", \"location\"],\r\n      resultCount: 0,\r\n      tagArray: [],\r\n      urlParams: new URLSearchParams(props.location.search),\r\n      filters: [\r\n        {\r\n          queryKey: \"q\",\r\n          queryValue: new URLSearchParams(props.location.search).get(\"q\"),\r\n        }\r\n      ],\r\n      minAndMaxPrice: undefined,\r\n    };\r\n  }\r\n\r\n  setSortingCategory = (e) => {\r\n    var queryFilters = this.state.filters;\r\n    var value = e.target.value\r\n    var hasOrderFilter = queryFilters.find(e => e.queryKey === \"order\");\r\n    var index = queryFilters.indexOf(hasOrderFilter);\r\n\r\n    if(index !== -1) {\r\n      hasOrderFilter[\"queryValue\"] = value;\r\n      queryFilters[index] = hasOrderFilter;\r\n    } else {\r\n      var orderFilter = {\r\n        queryKey: \"order\",\r\n        queryValue: value\r\n      }\r\n      queryFilters.push(orderFilter);\r\n    }\r\n\r\n    this.setState({\r\n      filters: queryFilters\r\n    });\r\n    this.makeSearch()\r\n    /* var sorting = e.target.value;\r\n    this.setFilter(\"order\", sorting, sorting); */\r\n  };\r\n\r\n  getFiltersOnMount = () => {\r\n    let urlParams = new URLSearchParams(window.location.search)\r\n\r\n    var params = [];\r\n    for (const [key, value] of urlParams) {\r\n      var filter = {};\r\n\r\n      switch(key){\r\n        case 'q':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: undefined,\r\n            tagValue: undefined,\r\n          };\r\n          params.push(filter)\r\n          break;\r\n        case 'order':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value\r\n          }\r\n          params.push(filter);\r\n          break;\r\n        case 'price_max':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"maxPrice\",\r\n            tagValue: `til ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'price_min':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"minPrice\",\r\n            tagValue: `fra ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'status':\r\n          if(value === \"new\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusNew\",\r\n              tagValue: \"Nytt\",\r\n            };\r\n          } else if(value === \"used\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusUsed\",\r\n              tagValue: \"Brukt\",\r\n            };\r\n          }\r\n          \r\n          params.push(filter);\r\n          break;\r\n      }\r\n    }\r\n    this.setState({\r\n      filters: params\r\n    });\r\n    return params;\r\n  };\r\n\r\n  getTags = (queryFilters) => {\r\n    var filters = queryFilters === undefined ? this.state.filters : queryFilters;\r\n    var tags = [];\r\n\r\n    for (const filter of filters) {\r\n      if (filter.tagKey !== undefined) {\r\n        var tag = {\r\n          key: filter.tagKey,\r\n          value: filter.tagValue,\r\n          queryKey: filter.queryKey,\r\n          queryValue: filter.queryValue,\r\n        };\r\n        tags.push(tag);\r\n      }\r\n    }\r\n    this.setState({\r\n      tagArray: tags,\r\n    });\r\n    return tags;\r\n  };\r\n\r\n  makeSearch = () => {\r\n    let filters = this.state.filters;\r\n    var queryString = \"\";\r\n    for (const filter of filters) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    /* Object.entries(filters).forEach(\r\n      ([key, value]) => (queryString += `${key}=${value}&`)\r\n    ); */\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n    let query = `/search?${queryString}`;\r\n    instanceAxs\r\n      .get(query)\r\n      .then((response) => {\r\n        // console.log(\"Search response\", response);\r\n        if (response.data.status) {\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: returnedItems.length,\r\n          });\r\n          window.history.pushState(\"page2\", \"seach made\", query);\r\n          // this.getFiltersOnMount();\r\n          // window.location.href =  query\r\n        } else {\r\n          return console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  setFilter = (queryKey, queryValue, tagKey, tagValue) => {\r\n    var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n    var filter = queryFilters.find((element) => element.tagKey === tagKey);\r\n    var index = queryFilters.indexOf(filter);\r\n\r\n    if (queryValue === '') {\r\n      if(index !== -1){\r\n        queryFilters.splice(index,1)\r\n        this.setState({\r\n          filters: queryFilters\r\n        });\r\n        this.removeTag(tagKey, queryKey)\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (index === -1) {\r\n      var newFilter = {\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n        tagKey: tagKey,\r\n        tagValue: tagValue,\r\n      };\r\n\r\n      queryFilters.push(newFilter);\r\n\r\n      this.setState({\r\n        filters: queryFilters,\r\n      });\r\n      this.addFilterTag(tagKey,tagValue,queryKey, queryValue);\r\n      return;\r\n    }\r\n\r\n    if (multipleQueryFilters.includes(queryKey, 0)) {\r\n      var qValue = filter.queryValue;\r\n      if (qValue === undefined || qValue === null) qValue = \"\";\r\n\r\n      if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\r\n      qValue = qValue.trim();\r\n\r\n      filter.queryValue = qValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, qValue)\r\n    } else {\r\n      filter.queryValue = queryValue;\r\n      filter.tagValue = tagValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, queryValue)\r\n    }\r\n    this.setState({\r\n      filters: queryFilters,\r\n    });\r\n  };\r\n\r\n  addFilterTag = (key, value, queryKey, queryValue) => {\r\n    let tagArr = this.state.tagArray;\r\n    var tagObj = {};\r\n    var object = tagArr.find((obj) => obj.key === key);\r\n    var objIndex = tagArr.indexOf(object);\r\n\r\n    if (objIndex !== -1) {\r\n      tagObj = {\r\n        key,\r\n        value: value,\r\n        queryKey,\r\n        queryValue: queryValue,\r\n      };\r\n      tagArr[objIndex] = tagObj;\r\n    } else {\r\n      tagArr.push({\r\n        key: key,\r\n        value: value,\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n      });\r\n    }\r\n    this.setState({\r\n      tagArr: tagArr,\r\n    });\r\n  };\r\n\r\n  removeFilter = (filter, queryValue) => {\r\n    // remove a filter completely or erase a prop of it\r\n    /* var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n    var qValue = queryValue || undefined;\r\n\r\n    if(multipleQueryFilters.includes(filter)){\r\n      if(queryFilters[filter] !== undefined && queryFilters[filter] !== null && qValue !== undefined){\r\n\r\n        var qFilter = queryFilters[filter];\r\n        var newQueryFilter = String(qFilter).replace(qValue, '');\r\n        newQueryFilter = newQueryFilter.trim();\r\n        queryFilters[filter] = newQueryFilter;\r\n        if(queryFilters[filter] === '') {\r\n          delete queryFilters[filter]; \r\n        } \r\n      }\r\n    } else {\r\n      if(queryFilters[filter] !== undefined && queryFilters[filter] !== null) {\r\n        delete queryFilters[filter];\r\n        // this.removeTag(\"\",filter)\r\n      }\r\n    }\r\n    this.setState({\r\n      filters:queryFilters\r\n    }) \r\n    var tagArray = this.state.tagArray;\r\n        let obj = tagArray.find((x) => x.queryValue === queryValue);\r\n        if(obj !== undefined){\r\n          console.log(\"obj\")\r\n          let index = tagArray.indexOf(obj);\r\n          tagArray.splice(index, 1);\r\n          this.setState({ tagArray });\r\n        } */\r\n    // this.removeTag(\"\",filter)\r\n    /* var prop = property || undefined;\r\n    var params = this.state.filters;\r\n    if (filterOrProp === \"prop\") {\r\n      if (\r\n        params[filter] !== undefined &&\r\n        params[filter] !== null &&\r\n        prop !== undefined\r\n      ) {\r\n        let parameter = params[filter];\r\n        console.log(\"parameter\", parameter)\r\n        let newparameter = String(parameter).replace(prop, \"\");\r\n        newparameter = newparameter.trim();\r\n        console.log(\"new parameter\", newparameter);\r\n        params[filter] = newparameter;\r\n        if (params[filter] === \"\") delete this.state.filters[filter];\r\n        console.log(this.state.filters);\r\n      }\r\n    } else {\r\n      if (params[filter] !== undefined && params[filter] !== null) {\r\n        delete this.state.filters[filter];\r\n        console.log(this.state.filters);\r\n      }\r\n    } */\r\n  };\r\n\r\n  removeTag = (key, queryKey) => {\r\n    var tagArray = this.state.tagArray;\r\n    let obj = tagArray.find((x) => x.key === key);\r\n    if(obj !== undefined){\r\n      let index = tagArray.indexOf(obj);\r\n      tagArray.splice(index, 1);\r\n      this.setState({ tagArray });\r\n    } \r\n  };\r\n\r\n  removeAllFilters = () => {\r\n    var filterObj = this.state.filters;\r\n    var filterArr = [];\r\n\r\n    for(const filter of filterObj) {    // remove all filters except for 'q'\r\n      if(filter.queryKey !== 'q') break;\r\n      filterArr.push(filter)\r\n    }\r\n\r\n    this.setState({\r\n      tagArray: [],\r\n      filters: filterArr,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let params = this.getFiltersOnMount();\r\n    this.getTags(params);\r\n    var queryString = \"\";\r\n    for (const filter of params) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n\r\n    let query = `/search?${queryString}`;\r\n    instanceAxs\r\n      .get(query)\r\n      .then((response) => {\r\n        // console.log(\"Search response\", response);\r\n        var minPrice = response.data.additional.minPrice;\r\n        var maxPrice = response.data.additional.maxPrice;\r\n        if (response.data.status) {\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: returnedItems.length,\r\n            minAndMaxPrice: { minPrice: minPrice, maxPrice: maxPrice },\r\n          });\r\n\r\n          this.props.history.push(`/search?${queryString}`);\r\n        } else {\r\n          return console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid searchResultPageContainer\">\r\n        <div className=\"searchFilterComponents\">\r\n          <button className=\"btn btn-primary\" onClick={this.makeSearch}>\r\n            Bruk Endringer\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary \"\r\n            onClick={() => console.log(this.state.filters)}\r\n          >\r\n            Lagre Søk\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={this.removeAllFilters}>\r\n            Fjerne Filtre\r\n          </button>\r\n          {this.state.minAndMaxPrice !== undefined && (\r\n            <Price\r\n              setfilter={this.setFilter}\r\n              priceObject={this.state.minAndMaxPrice}\r\n              minPriceState={this.state.tagArray.find(e => e.key === \"minPrice\")}\r\n              maxPriceState={this.state.tagArray.find(e => e.key === \"maxPrice\")}\r\n            />\r\n          )}\r\n          <Status\r\n            setfilter={this.setFilter}\r\n            statusNewState={this.state.filters.find(e => e.tagKey === \"statusNew\")}\r\n            statusUsedState={this.state.filters.find(e => e.tagKey === \"statusUsed\")}\r\n          ></Status>\r\n        </div>\r\n        <div className=\"searchResults\">\r\n          <div className=\"searchResults_Info\">\r\n            <div className=\"searchResults_Order \">\r\n              <p style={{ margin: 0 }}>{this.state.resultCount} treff</p>\r\n\r\n              <PrimarySelect \r\n                setSortingCategory={this.setSortingCategory}>\r\n                  \r\n              </PrimarySelect>\r\n\r\n            </div>\r\n\r\n            <div className=\"filterTagsContainer\">\r\n              {this.state.tagArray.map((tag) => {\r\n                return <Tags tag={tag} setfilter={this.setFilter} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"searchResults_Items\">\r\n            {this.state.items.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"itemCol\" key={item.annonce._id}>\r\n                    <ProductCard                \r\n                      img={item.annonce.images}\r\n                      price={item.annonce.price}\r\n                      name={item.annonce.title}\r\n                      id={item.annonce._id}\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPrice.defaultProps = {\r\n  priceObject: { minPrice: 0, maxPrice: 50 },\r\n};\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}