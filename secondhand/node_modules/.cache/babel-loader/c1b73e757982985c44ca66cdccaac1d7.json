{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux'; // import { rootReducer } from '../reducers/rootReducer'\n\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged', 'user']\n};\nconst rootReducer = combineReducers({\n  isLogged: \"mail:\"\n});\nexport const loadSessionState = () => {\n  try {\n    const serializedLocalState = window.localStorage.getItem('persist:root');\n\n    if (serializedLocalState === null) {\n      return undefined;\n    }\n\n    var localData = JSON.parse(serializedLocalState);\n    /* \n        sessisonData = {\"type\": \"session\", \"data\": {\"session\": sessisonData}}; \n        var localData = JSON.parse(serializedLocalState);\n        localData = {\"type1\": \"local\", \"veri\": {\"local\": localData}}; \n        let finalData =Object.assign(sessisonData,localData)\n        console.log(\"finalData\", finalData) */\n\n    console.log(localData);\n    return localData;\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\nexport const saveState = state => {\n  try {\n    var userData = JSON.stringify(state.user);\n    var isLoggedData = JSON.stringify(state.isLogged);\n    var filtersData = JSON.stringify(state.filters);\n    localStorage.setItem(\"state\", userData);\n    sessionStorage.setItem(\"sessionData\", filtersData);\n    return state;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","localStorage","sessionStorage","combineReducers","LoginReducer","userReducer","SearchReducer","persistConfig","key","storage","blacklist","sessionConfig","rootReducer","isLogged","loadSessionState","serializedLocalState","window","getItem","undefined","localData","JSON","parse","console","log","err","saveState","state","userData","stringify","user","isLoggedData","filtersData","filters","setItem","persistedState","persistedReducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,GAAG,EAAE,MAFe;AAGpBC,EAAAA,OAAO,EAAER,YAHW;AAIpBS,EAAAA,SAAS,EAAE,CAAC,SAAD;AAJS,CAAtB;AAOA,OAAO,MAAMC,aAAa,GAAG;AAC3BH,EAAAA,GAAG,EAAE,MADsB;AAE3BC,EAAAA,OAAO,EAAEP,cAFkB;AAG3BQ,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAY,MAAZ;AAHgB,CAAtB;AAMP,MAAME,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,QAAQ,EAAE;AADwB,CAAD,CAAnC;AAKA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,MAAI;AACF,UAAMC,oBAAoB,GAAGC,MAAM,CAACf,YAAP,CAAoBgB,OAApB,CAA4B,cAA5B,CAA7B;;AAEA,QAAIF,oBAAoB,KAAK,IAA7B,EAAmC;AACjC,aAAOG,SAAP;AACD;;AACD,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWN,oBAAX,CAAhB;AACJ;AACA;AACA;AACA;AACA;AACA;;AACIO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,WAAOA,SAAP;AACD,GAfD,CAeE,OAAMK,GAAN,EAAW;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,WAAON,SAAP;AACD;AACF,CApBM;AAsBP,OAAO,MAAMO,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAI;AACF,QAAIC,QAAQ,GAAGP,IAAI,CAACQ,SAAL,CAAeF,KAAK,CAACG,IAArB,CAAf;AACA,QAAIC,YAAY,GAAGV,IAAI,CAACQ,SAAL,CAAeF,KAAK,CAACb,QAArB,CAAnB;AACA,QAAIkB,WAAW,GAAGX,IAAI,CAACQ,SAAL,CAAeF,KAAK,CAACM,OAArB,CAAlB;AACA/B,IAAAA,YAAY,CAACgC,OAAb,CAAqB,OAArB,EAA6BN,QAA7B;AACAzB,IAAAA,cAAc,CAAC+B,OAAf,CAAuB,aAAvB,EAAsCF,WAAtC;AACA,WAAOL,KAAP;AACD,GAPD,CAOE,OAAOF,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACJ,CAXM;AAaP,OAAO,MAAMU,cAAc,GAAGpB,gBAAgB,EAAvC;AACP,OAAO,MAAMqB,gBAAgB,GAAGnC,cAAc,CAACO,aAAD,EAAgBK,WAAhB,CAAvC","sourcesContent":["import { persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux';\n// import { rootReducer } from '../reducers/rootReducer'\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\n\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged','user']\n}\n\nconst rootReducer = combineReducers({ \n  isLogged: \"mail:\",\n  \n}); \n\nexport const loadSessionState = () => {\n  try {\n    const serializedLocalState = window.localStorage.getItem('persist:root');\n\n    if (serializedLocalState === null) {\n      return undefined;\n    } \n    var localData = JSON.parse(serializedLocalState);\n/* \n    sessisonData = {\"type\": \"session\", \"data\": {\"session\": sessisonData}}; \n    var localData = JSON.parse(serializedLocalState);\n    localData = {\"type1\": \"local\", \"veri\": {\"local\": localData}}; \n    let finalData =Object.assign(sessisonData,localData)\n    console.log(\"finalData\", finalData) */\n    console.log(localData)\n    return localData;\n  } catch(err) {\n    console.log(err); \n    return undefined;\n  }\n}\n  \nexport const saveState = (state) => {\n    try {\n      var userData = JSON.stringify(state.user);\n      var isLoggedData = JSON.stringify(state.isLogged);\n      var filtersData = JSON.stringify(state.filters);\n      localStorage.setItem(\"state\",userData);\n      sessionStorage.setItem(\"sessionData\", filtersData)\n      return state;\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}