{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/redux/redux.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Redux() {\n  _s();\n\n  // State: a counter value\n  const [counter, setCounter] = useState(0); // Action: code that causes an update to the state when something happens\n\n  const increment = () => {\n    console.log(store.getState());\n  };\n\n  const store = createStore(counterReducer);\n\n  function counterReducer(state = counter, action) {\n    // Check to see if the reducer cares about this action\n    if (action.type === 'increment') {\n      // If so, make a copy of `state`\n      return setCounter(prevCounter => prevCounter + 1);\n    } else if (action.type === \"decrement\") {\n      return setCounter(prevCounter => prevCounter + 1);\n    } // otherwise return the existing state unchanged\n\n\n    return state;\n  }\n\n  const adding = () => {\n    return {\n      type: 'todos/todoAdded',\n      payload: \"increment\"\n    };\n  }; // View: the UI definition\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Value: \", counter, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Redux, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = Redux;\nexport default Redux;\n\nvar _c;\n\n$RefreshReg$(_c, \"Redux\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/redux/redux.js"],"names":["useState","createStore","useSelector","useDispatch","Redux","counter","setCounter","increment","console","log","store","getState","counterReducer","state","action","type","prevCounter","adding","payload"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC,CAFa,CAIb;;AACA,QAAMO,SAAS,GAAG,MAAM;AAExBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,EAAZ;AACC,GAHD;;AAKA,QAAMD,KAAK,GAAGT,WAAW,CAACW,cAAD,CAAzB;;AAEA,WAASA,cAAT,CAAwBC,KAAK,GAAGR,OAAhC,EAAyCS,MAAzC,EAAiD;AAC7C;AACA,QAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACA,aAAOT,UAAU,CAACU,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAjB;AACD,KAHD,MAGO,IAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACpC,aAAOT,UAAU,CAACU,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAjB;AACH,KAP4C,CAQ7C;;;AACA,WAAOH,KAAP;AACD;;AAGH,QAAMI,MAAM,GAAG,MAAM;AACjB,WAAO;AACLF,MAAAA,IAAI,EAAE,iBADD;AAELG,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAIH,GALD,CAzBa,CAgCb;;;AACA,sBACE;AAAA,0BACUb,OADV,oBACmB;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCMH,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\"\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Redux() {\n    // State: a counter value\n    const [counter, setCounter] = useState(0)\n  \n    // Action: code that causes an update to the state when something happens\n    const increment = () => {\n      \n    console.log(store.getState())\n    }\n\n    const store = createStore(counterReducer)\n\n    function counterReducer(state = counter, action) {\n        // Check to see if the reducer cares about this action\n        if (action.type === 'increment') {\n          // If so, make a copy of `state`\n          return setCounter(prevCounter => prevCounter + 1);\n        } else if (action.type === \"decrement\") {\n            return setCounter(prevCounter => prevCounter + 1)\n        }\n        // otherwise return the existing state unchanged\n        return state\n      }\n      \n\n    const adding = () => {\n        return {\n          type: 'todos/todoAdded',\n          payload: \"increment\"\n        }\n    }\n  \n    // View: the UI definition\n    return (\n      <div>\n        Value: {counter} <button onClick={increment}>Increment</button>\n      </div>\n    )\n  }\n\nexport default Redux;"]},"metadata":{},"sourceType":"module"}