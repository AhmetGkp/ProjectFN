{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/NewAnnonce/FormComponents/PhotoAndDescription.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { instanceAxs } from \"../../../api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PhotoAndDescription() {\n  _s();\n\n  const [doc, setDoc] = useState();\n  const [images, setImages] = useState();\n  const [loading, setLoading] = useState();\n\n  const onFileChange = event => {\n    console.log(event.target.files[0]);\n    const ImageUrl = URL.createObjectURL(event.target.files[0]);\n    setDoc(ImageUrl);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    var newAnnonce = doc;\n    instanceAxs.post('/uploadimage', newAnnonce).then(result => {\n      console.log(result);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getImages = () => {\n    instanceAxs.get('/file?filename=').then(result => {\n      console.log(result);\n      let files = result.data;\n      setImages(files);\n      setLoading(false);\n      /*let filesAmount = files.length;\n      for (var i = 0; i < filesAmount; i++) {\n          let reader = new FileReader();\n          reader.onload = (event) => {\n              return(\n                  <img src={event.target.result} id=\"fdsa\" alt=\"pic1\" width=\"250\" height=\"250\" />\n              )\n          }\n          reader.readAsDataURL(files[i]);\n      }*/\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getImages();\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5 mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/form-data\",\n      action: \"/user/uploadimage\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bilder, Videoer og Beskrivelse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        for: \"image\",\n        children: \"Bilder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control-file\",\n          type: \"file\",\n          id: \"file\",\n          name: \"file\",\n          onChange: onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: images !== undefined && images.map(img => {\n          let reader = new FileReader();\n\n          reader.onload = event => {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: event.target.result,\n              id: \"fdsa\",\n              alt: \"pic1\",\n              width: \"250\",\n              height: \"250\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this);\n          }; // reader.readAsDataURL(img);                            \n\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhotoAndDescription, \"GFQv8B7CoROdENEC4ILHCQrTcHQ=\");\n\n_c = PhotoAndDescription;\nexport default PhotoAndDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoAndDescription\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/Pages/NewAnnonce/FormComponents/PhotoAndDescription.js"],"names":["useEffect","useState","instanceAxs","PhotoAndDescription","doc","setDoc","images","setImages","loading","setLoading","onFileChange","event","console","log","target","files","ImageUrl","URL","createObjectURL","submit","e","preventDefault","newAnnonce","post","then","result","catch","error","getImages","get","data","undefined","map","img","reader","FileReader","onload"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { instanceAxs } from \"../../../api/Api\";\n\nfunction PhotoAndDescription() {\n    const [doc, setDoc] = useState();\n    const [images, setImages] = useState();\n    const [loading, setLoading] = useState();\n\n    const onFileChange = event => {\n        console.log(event.target.files[0])\n        const ImageUrl =  URL.createObjectURL(event.target.files[0]);\n        setDoc(ImageUrl)\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        var newAnnonce = doc;\n\n        instanceAxs.post('/uploadimage', newAnnonce)\n            .then(result => {\n                console.log(result)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const getImages = () => {\n        instanceAxs.get('/file?filename=')\n            .then(result => {\n                console.log(result);\n                let files = result.data;\n                setImages(files);\n                setLoading(false);\n                /*let filesAmount = files.length;\n                for (var i = 0; i < filesAmount; i++) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        return(\n                            <img src={event.target.result} id=\"fdsa\" alt=\"pic1\" width=\"250\" height=\"250\" />\n                        )\n                    }\n                    reader.readAsDataURL(files[i]);\n                }*/\n            }) \n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    useEffect(() => {\n        getImages();\n    },[loading])\n\n    return(\n        <div className=\"mb-5 mt-5\">\n            <form encType=\"multipart/form-data\" action=\"/user/uploadimage\" method=\"POST\" >\n                <h3>Bilder, Videoer og Beskrivelse</h3>\n                <label className=\"form-label\" for=\"image\">Bilder</label> \n                <div  className=\"input-group mb-3\">\n                    <input className=\"form-control-file\" type=\"file\" id=\"file\" name=\"file\" onChange={onFileChange}></input>\n                </div>\n                <div>\n                    { images !== undefined &&\n                        \n                        images.map((img) => {\n                            let reader = new FileReader();\n                            reader.onload = (event) => {\n                                return(\n                                    <img src={event.target.result} id=\"fdsa\" alt=\"pic1\" width=\"250\" height=\"250\"/>\n                                )\n                            };\n                           // reader.readAsDataURL(img);                            \n                        })\n                    }\n                    </div>\n                {/*<img src={doc} id=\"fdsa\" alt=\"pic1\" width=\"250\" height=\"250\" />\n                <label className=\"form-label\">Video</label>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" id=\"video\"></input>\n                </div>\n                <label htmlFor=\"description\" className=\"form-label\">Beskrivelse</label>\n                <div className=\"input-group mb-3\">\n                    <textarea className=\"form-control\" id=\"description\" rows=\"3\"/>\n                </div>*/}\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default PhotoAndDescription;"]},"metadata":{},"sourceType":"module"}