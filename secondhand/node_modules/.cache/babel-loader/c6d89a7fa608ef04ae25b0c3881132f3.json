{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginReducer = (state = false, action) => {\n  _s();\n\n  let history = useHistory();\n  history.push('/');\n\n  switch (action.type) {\n    case \"SIGN_IN\":\n      return true;\n\n    case \"SIGN_OUT\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\n_s(LoginReducer, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginReducer;\nexport function LoggedSelector() {\n  _s2();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s2(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = LoggedSelector;\nexport default LoginReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginReducer\");\n$RefreshReg$(_c2, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/LoginReducer.js"],"names":["useSelector","useHistory","LoginReducer","state","action","history","push","type","LoggedSelector","isLogged"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,YAAY,GAAI,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAAA;;AAC7C,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AACAI,EAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;;AAEA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,SAAL;AACI,aAAO,IAAP;;AACJ,SAAK,UAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CAZD;;GAAMD,Y;UACYD,U;;;KADZC,Y;AAcN,OAAO,SAASM,cAAT,GAAyB;AAAA;;AAC5B,SAAOR,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACM,QAAhB,CAAlB;AACH;;IAFeD,c;UACLR,W;;;MADKQ,c;AAIhB,eAAeN,YAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\"\n\n\nconst LoginReducer =  (state = false, action) => {\n    let history = useHistory();\n    history.push('/')\n\n    switch (action.type) {\n        case \"SIGN_IN\":\n            return true;            \n        case \"SIGN_OUT\":\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default LoginReducer;"]},"metadata":{},"sourceType":"module"}