{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\nconst isLoggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      var msg = 'default';\n      login(action.payload).then(data => {\n        console.log(data);\n        msg = data.message;\n      });\n      console.log(msg);\n      if (3 > 2) return true;\n\n    case \"SIGN_OUT\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport function LoggedSelector() {\n  _s();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoggedSelector;\nexport default isLoggedReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/isLoggedReducer.js"],"names":["useSelector","login","instanceAxs","isLoggedReducer","state","action","type","msg","payload","then","data","console","log","message","LoggedSelector","isLogged"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAGA,MAAMC,eAAe,GAAI,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,UAAIC,GAAG,GAAG,SAAV;AACAN,MAAAA,KAAK,CAACI,MAAM,CAACG,OAAR,CAAL,CACKC,IADL,CACUC,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAH,QAAAA,GAAG,GAAGG,IAAI,CAACG,OAAX;AACH,OAJL;AAKAF,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,UAAG,IAAE,CAAL,EAAQ,OAAO,IAAP;;AACZ,SAAK,UAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAOH,KAAP;AAbR;AAeH,CAhBD;;AAkBA,OAAO,SAASU,cAAT,GAAyB;AAAA;;AAC5B,SAAOd,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACW,QAAhB,CAAlB;AACH;;GAFeD,c;UACLd,W;;;KADKc,c;AAIhB,eAAeX,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\n\nconst isLoggedReducer =  (state = false, action) => {\n    switch (action.type) {\n        case \"SIGN_IN\":\n            var msg = 'default';\n            login(action.payload)\n                .then(data => {\n                    console.log(data)\n                    msg = data.message;\n                })\n            console.log(msg)\n            if(3>2) return true;\n        case \"SIGN_OUT\":\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default isLoggedReducer;"]},"metadata":{},"sourceType":"module"}