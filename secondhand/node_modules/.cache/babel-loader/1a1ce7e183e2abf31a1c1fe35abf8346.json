{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\n\nconst isLoggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      const message = login(action.payload);\n\n      if (message === \"user logged in\") {\n        state = true;\n      } else {\n        return console.log(message);\n      }\n\n    case \"SIGN_OUT\":\n      return state = false;\n\n    default:\n      return state;\n  }\n};\n\nexport function LoggedSelector() {\n  _s();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoggedSelector;\nexport default isLoggedReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/isLoggedReducer.js"],"names":["useSelector","login","isLoggedReducer","state","action","type","message","payload","console","log","LoggedSelector","isLogged"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,YAAMC,OAAO,GAAGL,KAAK,CAACG,MAAM,CAACG,OAAR,CAArB;;AACA,UAAGD,OAAO,KAAK,gBAAf,EAAgC;AAC5BH,QAAAA,KAAK,GAAG,IAAR;AACH,OAFD,MAEO;AACH,eAAOK,OAAO,CAACC,GAAR,CAAYH,OAAZ,CAAP;AACH;;AACL,SAAK,UAAL;AACI,aAAOH,KAAK,GAAG,KAAf;;AACJ;AACI,aAAOA,KAAP;AAXR;AAaH,CAdD;;AAgBA,OAAO,SAASO,cAAT,GAAyB;AAAA;;AAC5B,SAAOV,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACQ,QAAhB,CAAlB;AACH;;GAFeD,c;UACLV,W;;;KADKU,c;AAIhB,eAAeR,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\n\nconst isLoggedReducer = (state = false, action) => {\n    switch (action.type) {\n        case \"SIGN_IN\":\n            const message = login(action.payload);\n            if(message === \"user logged in\"){\n                state = true\n            } else {\n                return console.log(message);\n            }\n        case \"SIGN_OUT\":\n            return state = false\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default isLoggedReducer;"]},"metadata":{},"sourceType":"module"}