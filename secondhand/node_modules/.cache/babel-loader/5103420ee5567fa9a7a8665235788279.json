{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\nconst isLoggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      instanceAxs.post('/login', user).then(response => {\n        message = response.data.message;\n        console.log(response);\n        return message;\n      }).catch(error => {\n        console.log(error);\n      });\n\n    case \"SIGN_OUT\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport function LoggedSelector() {\n  _s();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoggedSelector;\nexport default isLoggedReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/isLoggedReducer.js"],"names":["useSelector","login","instanceAxs","isLoggedReducer","state","action","type","post","user","then","response","message","data","console","log","catch","error","LoggedSelector","isLogged"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAGA,MAAMC,eAAe,GAAI,CAACC,KAAK,GAAG,KAAT,EAAgBC,MAAhB,KAA2B;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACIJ,MAAAA,WAAW,CAACK,IAAZ,CAAiB,QAAjB,EAA2BC,IAA3B,EACHC,IADG,CACEC,QAAQ,IAAI;AACdC,QAAAA,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcD,OAAxB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,eAAOC,OAAP;AACH,OALG,EAMHI,KANG,CAMGC,KAAK,IAAI;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OARG;;AASJ,SAAK,UAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAOZ,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,OAAO,SAASa,cAAT,GAAyB;AAAA;;AAC5B,SAAOjB,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACc,QAAhB,CAAlB;AACH;;GAFeD,c;UACLjB,W;;;KADKiB,c;AAIhB,eAAed,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\n\nconst isLoggedReducer =  (state = false, action) => {\n    switch (action.type) {\n        case \"SIGN_IN\":\n            instanceAxs.post('/login', user)\n        .then(response => {\n            message = response.data.message;\n            console.log(response)\n            return message;\n        })   \n        .catch(error => {\n            console.log(error)\n        })\n        case \"SIGN_OUT\":\n            return false;\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default isLoggedReducer;"]},"metadata":{},"sourceType":"module"}