{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/Pages/SearchedResultPage/SearchResult.js\";\nimport React from \"react\";\nimport \"./SearchResult.css\";\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\nimport { instanceAxs } from \"../../api/Api\";\nimport Date from \"./FilterComponents/Date\";\nimport Price from \"./FilterComponents/Price\";\nimport Status from \"./FilterComponents/Status\";\nimport Tags from \"./FilterComponents/Tags.js\";\nimport PrimarySelect from \"./ComponentSelect/PrimarySelect\";\nimport CategorySelector from \"./FilterComponents/CategorySelecter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SearchResult extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSortingCategory = value => {\n      var queryFilters = this.state.filters;\n      var hasOrderFilter = queryFilters.find(e => e.queryKey === \"order\");\n      var index = queryFilters.indexOf(hasOrderFilter);\n\n      if (index !== -1) {\n        hasOrderFilter[\"queryValue\"] = value;\n        queryFilters[index] = hasOrderFilter;\n      } else {\n        var orderFilter = {\n          queryKey: \"order\",\n          queryValue: value\n        };\n        queryFilters.push(orderFilter);\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n      this.makeSearch();\n      /* var sorting = e.target.value;\r\n      this.setFilter(\"order\", sorting, sorting); */\n    };\n\n    this.getFiltersOnMount = () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      var params = [];\n\n      for (const [key, value] of urlParams) {\n        var filter = {};\n\n        switch (key) {\n          case 'q':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: undefined,\n              tagValue: undefined\n            };\n            params.push(filter);\n            break;\n\n          case 'order':\n            filter = {\n              queryKey: key,\n              queryValue: value\n            };\n            params.push(filter);\n            break;\n\n          case 'price_max':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"maxPrice\",\n              tagValue: `til ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'price_min':\n            filter = {\n              queryKey: key,\n              queryValue: value,\n              tagKey: \"minPrice\",\n              tagValue: `fra ${value}`\n            };\n            params.push(filter);\n            break;\n\n          case 'status':\n            if (value === \"new\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusNew\",\n                tagValue: \"Nytt\"\n              };\n            } else if (value === \"used\") {\n              filter = {\n                queryKey: key,\n                queryValue: value,\n                tagKey: \"statusUsed\",\n                tagValue: \"Brukt\"\n              };\n            }\n\n            params.push(filter);\n            break;\n        }\n      }\n\n      this.setState({\n        filters: params\n      });\n      return params;\n    };\n\n    this.getTags = queryFilters => {\n      var filters = queryFilters === undefined ? this.state.filters : queryFilters;\n      var tags = [];\n\n      for (const filter of filters) {\n        if (filter.tagKey !== undefined) {\n          var tag = {\n            key: filter.tagKey,\n            value: filter.tagValue,\n            queryKey: filter.queryKey,\n            queryValue: filter.queryValue\n          };\n          tags.push(tag);\n        }\n      }\n\n      this.setState({\n        tagArray: tags\n      });\n      return tags;\n    };\n\n    this.makeSearch = () => {\n      let filters = this.state.filters;\n      var queryString = \"\";\n\n      for (const filter of filters) {\n        queryString += `${filter.queryKey}=${filter.queryValue}&`;\n      }\n      /* Object.entries(filters).forEach(\r\n        ([key, value]) => (queryString += `${key}=${value}&`)\r\n      ); */\n\n\n      if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1);\n      let query = `/file/getmenuitems?${queryString}`;\n      instanceAxs.get(query).then(response => {\n        console.log(query);\n        console.log(\"Search response\", response);\n\n        if (response.data.status) {\n          var returnedItems = response.data.items;\n          this.setState({\n            items: returnedItems,\n            resultCount: returnedItems.length\n          }); // window.history.pushState(\"page2\", \"seach made\", query);\n          // this.getFiltersOnMount();\n          // window.location.href =  query\n        } else {}\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.setFilter = (queryKey, queryValue, tagKey, tagValue) => {\n      var queryFilters = this.state.filters;\n      var multipleQueryFilters = this.state.filtersWithMultipleQueries;\n      var filter = queryFilters.find(element => element.tagKey === tagKey);\n      var index = queryFilters.indexOf(filter);\n\n      if (queryValue === '') {\n        if (index !== -1) {\n          queryFilters.splice(index, 1);\n          this.setState({\n            filters: queryFilters\n          });\n          this.removeTag(tagKey, queryKey);\n        }\n\n        return;\n      }\n\n      if (index === -1) {\n        var newFilter = {\n          queryKey: queryKey,\n          queryValue: queryValue,\n          tagKey: tagKey,\n          tagValue: tagValue\n        };\n        queryFilters.push(newFilter);\n        this.setState({\n          filters: queryFilters\n        });\n        this.addFilterTag(tagKey, tagValue, queryKey, queryValue);\n        return;\n      }\n\n      if (multipleQueryFilters.includes(queryKey, 0)) {\n        var qValue = filter.queryValue;\n        if (qValue === undefined || qValue === null) qValue = \"\";\n        if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\n        qValue = qValue.trim();\n        filter.queryValue = qValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, qValue);\n      } else {\n        filter.queryValue = queryValue;\n        filter.tagValue = tagValue;\n        queryFilters[index] = filter;\n        this.addFilterTag(tagKey, tagValue, filter, queryValue);\n      }\n\n      this.setState({\n        filters: queryFilters\n      });\n    };\n\n    this.addFilterTag = (key, value, queryKey, queryValue) => {\n      let tagArr = this.state.tagArray;\n      var tagObj = {};\n      var object = tagArr.find(obj => obj.key === key);\n      var objIndex = tagArr.indexOf(object);\n\n      if (objIndex !== -1) {\n        tagObj = {\n          key,\n          value: value,\n          queryKey,\n          queryValue: queryValue\n        };\n        tagArr[objIndex] = tagObj;\n      } else {\n        tagArr.push({\n          key: key,\n          value: value,\n          queryKey: queryKey,\n          queryValue: queryValue\n        });\n      }\n\n      this.setState({\n        tagArr: tagArr\n      });\n    };\n\n    this.removeTag = (key, queryKey) => {\n      var tagArray = this.state.tagArray;\n      let obj = tagArray.find(x => x.key === key);\n\n      if (obj !== undefined) {\n        let index = tagArray.indexOf(obj);\n        tagArray.splice(index, 1);\n        this.setState({\n          tagArray\n        });\n      }\n    };\n\n    this.removeAllFilters = () => {\n      var filterObj = this.state.filters;\n      var filterArr = [];\n\n      for (const filter of filterObj) {\n        // remove all filters except for 'q'\n        if (filter.queryKey !== 'q') break;\n        filterArr.push(filter);\n      }\n\n      this.setState({\n        tagArray: [],\n        filters: filterArr\n      });\n    };\n\n    this.state = {\n      items: [],\n      filtersWithMultipleQueries: [\"status\", \"location\"],\n      resultCount: 0,\n      tagArray: [],\n      urlParams: new URLSearchParams(props.location.search),\n      filters: [{\n        queryKey: \"q\",\n        queryValue: new URLSearchParams(props.location.search).get(\"q\")\n      }],\n      minAndMaxPrice: undefined\n    };\n  }\n\n  componentDidMount() {\n    let params = this.getFiltersOnMount();\n    this.getTags(params);\n    var queryString = \"\";\n\n    for (const filter of params) {\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\n    }\n\n    if (queryString[queryString.length - 1] === \"&\") queryString = queryString.slice(0, queryString.length - 1); // arr = [{main: \"car\", sub: {\"truch\", \"sedan\"}}]\n    // let query = `/search?${queryString}`;\n\n    let query = `/file/getmenuitems?${queryString}`;\n    instanceAxs.get(`${query}`).then(response => {\n      console.log(\"Search response\", response);\n      var minPrice = 0; //response.data.additional.minPrice;\n\n      var maxPrice = 10000; //response.data.additional.maxPrice;\n\n      if (response.status === 200) {\n        var responseDataItems = response.data.items;\n        var categoryArray = [];\n\n        for (let i = 0; i < responseDataItems.length; i++) {\n          let categoryObj = {};\n          categoryObj = {\n            main: responseDataItems[i][0]\n          };\n\n          if (i > 0) {\n            for (let k = 0; i < responseDataItems[i].length; k++) {}\n          }\n        }\n\n        var returnedItems = response.data.items;\n        this.setState({\n          items: returnedItems,\n          resultCount: 10,\n          //returnedItems.length,\n          minAndMaxPrice: {\n            minPrice: minPrice,\n            maxPrice: maxPrice\n          },\n          categoryArray\n        });\n        this.props.history.push(`/search?${queryString}`);\n      } else {\n        return console.log(response.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid searchResultPageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchFilterComponents\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.makeSearch,\n          children: \"Bruk Endringer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary \",\n          onClick: () => console.log(this.state.filters),\n          children: \"Lagre S\\xF8k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.removeAllFilters,\n          children: \"Fjerne Filtre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CategorySelector, {\n          setfilter: this.setFilter,\n          categoryState: this.state.categoryArray !== null && this.state.categoryArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), this.state.minAndMaxPrice !== undefined && /*#__PURE__*/_jsxDEV(Price, {\n          setfilter: this.setFilter,\n          priceObject: this.state.minAndMaxPrice,\n          minPriceState: this.state.tagArray.find(e => e.key === \"minPrice\"),\n          maxPriceState: this.state.tagArray.find(e => e.key === \"maxPrice\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          setfilter: this.setFilter,\n          statusNewState: this.state.filters.find(e => e.tagKey === \"statusNew\"),\n          statusUsedState: this.state.filters.find(e => e.tagKey === \"statusUsed\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Date, {\n          setfilter: this.setFilter,\n          state: this.state.filters.find(e => e.queryKey === \"published\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchResults_Order \",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0\n              },\n              children: [this.state.resultCount, \" treff\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrimarySelect, {\n              setSortingCategory: this.setSortingCategory,\n              selectedOption: this.state.filters.find(e => e.queryKey === \"order\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterTagsContainer\",\n            children: this.state.tagArray.map(tag => {\n              return /*#__PURE__*/_jsxDEV(Tags, {\n                tag: tag,\n                setfilter: this.setFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResults_Items\",\n          children: this.state.items.map((item, index) => {\n            item.annonce = item;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"itemCol\",\n                children: /*#__PURE__*/_jsxDEV(ProductCard, {\n                  img: item.annonce.images,\n                  price: item.annonce.price,\n                  name: item.annonce.title,\n                  id: item.annonce._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this)\n              }, item.annonce._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPrice.defaultProps = {\n  priceObject: {\n    minPrice: 0,\n    maxPrice: 50\n  }\n};\nexport default SearchResult;","map":{"version":3,"sources":["/home/tolga/VS Code workspace/Brukthånd/secondhand/src/Pages/SearchedResultPage/SearchResult.js"],"names":["React","ProductCard","instanceAxs","Date","Price","Status","Tags","PrimarySelect","CategorySelector","SearchResult","Component","constructor","props","setSortingCategory","value","queryFilters","state","filters","hasOrderFilter","find","e","queryKey","index","indexOf","orderFilter","queryValue","push","setState","makeSearch","getFiltersOnMount","urlParams","URLSearchParams","window","location","search","params","key","filter","tagKey","undefined","tagValue","getTags","tags","tag","tagArray","queryString","length","slice","query","get","then","response","console","log","data","status","returnedItems","items","resultCount","catch","err","setFilter","multipleQueryFilters","filtersWithMultipleQueries","element","splice","removeTag","newFilter","addFilterTag","includes","qValue","trim","tagArr","tagObj","object","obj","objIndex","x","removeAllFilters","filterObj","filterArr","minAndMaxPrice","componentDidMount","minPrice","maxPrice","responseDataItems","categoryArray","i","categoryObj","main","k","history","message","render","margin","map","item","annonce","images","price","title","_id","defaultProps","priceObject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;;AAEA,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,kBAlBmB,GAkBGC,KAAD,IAAW;AAC9B,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,OAA9B;AACA,UAAIC,cAAc,GAAGH,YAAY,CAACI,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,OAAtC,CAArB;AACA,UAAIC,KAAK,GAAGP,YAAY,CAACQ,OAAb,CAAqBL,cAArB,CAAZ;;AAEA,UAAGI,KAAK,KAAK,CAAC,CAAd,EAAiB;AACfJ,QAAAA,cAAc,CAAC,YAAD,CAAd,GAA+BJ,KAA/B;AACAC,QAAAA,YAAY,CAACO,KAAD,CAAZ,GAAsBJ,cAAtB;AACD,OAHD,MAGO;AACL,YAAIM,WAAW,GAAG;AAChBH,UAAAA,QAAQ,EAAE,OADM;AAEhBI,UAAAA,UAAU,EAAEX;AAFI,SAAlB;AAIAC,QAAAA,YAAY,CAACW,IAAb,CAAkBF,WAAlB;AACD;;AAED,WAAKG,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAEF;AADG,OAAd;AAGA,WAAKa,UAAL;AACA;AACJ;AACG,KAxCkB;;AAAA,SA0CnBC,iBA1CmB,GA0CC,MAAM;AACxB,UAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAhB;AAEA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,MAAM,CAACC,GAAD,EAAMtB,KAAN,CAAX,IAA2BgB,SAA3B,EAAsC;AACpC,YAAIO,MAAM,GAAG,EAAb;;AAEA,gBAAOD,GAAP;AACE,eAAK,GAAL;AACEC,YAAAA,MAAM,GAAG;AACPhB,cAAAA,QAAQ,EAAEe,GADH;AAEPX,cAAAA,UAAU,EAAEX,KAFL;AAGPwB,cAAAA,MAAM,EAAEC,SAHD;AAIPC,cAAAA,QAAQ,EAAED;AAJH,aAAT;AAMAJ,YAAAA,MAAM,CAACT,IAAP,CAAYW,MAAZ;AACA;;AACF,eAAK,OAAL;AACEA,YAAAA,MAAM,GAAG;AACPhB,cAAAA,QAAQ,EAAEe,GADH;AAEPX,cAAAA,UAAU,EAAEX;AAFL,aAAT;AAIAqB,YAAAA,MAAM,CAACT,IAAP,CAAYW,MAAZ;AACA;;AACF,eAAK,WAAL;AACEA,YAAAA,MAAM,GAAG;AACPhB,cAAAA,QAAQ,EAAEe,GADH;AAEPX,cAAAA,UAAU,EAAEX,KAFL;AAGPwB,cAAAA,MAAM,EAAE,UAHD;AAIPE,cAAAA,QAAQ,EAAG,OAAM1B,KAAM;AAJhB,aAAT;AAMAqB,YAAAA,MAAM,CAACT,IAAP,CAAYW,MAAZ;AACA;;AACF,eAAK,WAAL;AACEA,YAAAA,MAAM,GAAG;AACPhB,cAAAA,QAAQ,EAAEe,GADH;AAEPX,cAAAA,UAAU,EAAEX,KAFL;AAGPwB,cAAAA,MAAM,EAAE,UAHD;AAIPE,cAAAA,QAAQ,EAAG,OAAM1B,KAAM;AAJhB,aAAT;AAMAqB,YAAAA,MAAM,CAACT,IAAP,CAAYW,MAAZ;AACA;;AACF,eAAK,QAAL;AACE,gBAAGvB,KAAK,KAAK,KAAb,EAAoB;AAClBuB,cAAAA,MAAM,GAAG;AACPhB,gBAAAA,QAAQ,EAAEe,GADH;AAEPX,gBAAAA,UAAU,EAAEX,KAFL;AAGPwB,gBAAAA,MAAM,EAAE,WAHD;AAIPE,gBAAAA,QAAQ,EAAE;AAJH,eAAT;AAMD,aAPD,MAOO,IAAG1B,KAAK,KAAK,MAAb,EAAqB;AAC1BuB,cAAAA,MAAM,GAAG;AACPhB,gBAAAA,QAAQ,EAAEe,GADH;AAEPX,gBAAAA,UAAU,EAAEX,KAFL;AAGPwB,gBAAAA,MAAM,EAAE,YAHD;AAIPE,gBAAAA,QAAQ,EAAE;AAJH,eAAT;AAMD;;AAEDL,YAAAA,MAAM,CAACT,IAAP,CAAYW,MAAZ;AACA;AArDJ;AAuDD;;AACD,WAAKV,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAEkB;AADG,OAAd;AAGA,aAAOA,MAAP;AACD,KA7GkB;;AAAA,SA+GnBM,OA/GmB,GA+GR1B,YAAD,IAAkB;AAC1B,UAAIE,OAAO,GAAGF,YAAY,KAAKwB,SAAjB,GAA6B,KAAKvB,KAAL,CAAWC,OAAxC,GAAkDF,YAAhE;AACA,UAAI2B,IAAI,GAAG,EAAX;;AAEA,WAAK,MAAML,MAAX,IAAqBpB,OAArB,EAA8B;AAC5B,YAAIoB,MAAM,CAACC,MAAP,KAAkBC,SAAtB,EAAiC;AAC/B,cAAII,GAAG,GAAG;AACRP,YAAAA,GAAG,EAAEC,MAAM,CAACC,MADJ;AAERxB,YAAAA,KAAK,EAAEuB,MAAM,CAACG,QAFN;AAGRnB,YAAAA,QAAQ,EAAEgB,MAAM,CAAChB,QAHT;AAIRI,YAAAA,UAAU,EAAEY,MAAM,CAACZ;AAJX,WAAV;AAMAiB,UAAAA,IAAI,CAAChB,IAAL,CAAUiB,GAAV;AACD;AACF;;AACD,WAAKhB,QAAL,CAAc;AACZiB,QAAAA,QAAQ,EAAEF;AADE,OAAd;AAGA,aAAOA,IAAP;AACD,KAlIkB;;AAAA,SAoInBd,UApImB,GAoIN,MAAM;AACjB,UAAIX,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;AACA,UAAI4B,WAAW,GAAG,EAAlB;;AACA,WAAK,MAAMR,MAAX,IAAqBpB,OAArB,EAA8B;AAC5B4B,QAAAA,WAAW,IAAK,GAAER,MAAM,CAAChB,QAAS,IAAGgB,MAAM,CAACZ,UAAW,GAAvD;AACD;AACD;AACJ;AACA;;;AAEI,UAAIoB,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB,CAAX,KAAwC,GAA5C,EACED,WAAW,GAAGA,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqBF,WAAW,CAACC,MAAZ,GAAqB,CAA1C,CAAd;AACF,UAAIE,KAAK,GAAI,sBAAqBH,WAAY,EAA9C;AACA3C,MAAAA,WAAW,CACR+C,GADH,CACOD,KADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;;AACA,YAAIA,QAAQ,CAACG,IAAT,CAAcC,MAAlB,EAA0B;AACxB,cAAIC,aAAa,GAAGL,QAAQ,CAACG,IAAT,CAAcG,KAAlC;AACA,eAAK9B,QAAL,CAAc;AACZ8B,YAAAA,KAAK,EAAED,aADK;AAEZE,YAAAA,WAAW,EAAEF,aAAa,CAACV;AAFf,WAAd,EAFwB,CAMxB;AACA;AACA;AACD,SATD,MASO,CAEN;AACF,OAjBH,EAkBGa,KAlBH,CAkBUC,GAAD,IAAS;AACdR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,OApBH;AAqBD,KAtKkB;;AAAA,SAwKnBC,SAxKmB,GAwKP,CAACxC,QAAD,EAAWI,UAAX,EAAuBa,MAAvB,EAA+BE,QAA/B,KAA4C;AACtD,UAAIzB,YAAY,GAAG,KAAKC,KAAL,CAAWC,OAA9B;AACA,UAAI6C,oBAAoB,GAAG,KAAK9C,KAAL,CAAW+C,0BAAtC;AACA,UAAI1B,MAAM,GAAGtB,YAAY,CAACI,IAAb,CAAmB6C,OAAD,IAAaA,OAAO,CAAC1B,MAAR,KAAmBA,MAAlD,CAAb;AACA,UAAIhB,KAAK,GAAGP,YAAY,CAACQ,OAAb,CAAqBc,MAArB,CAAZ;;AAEA,UAAIZ,UAAU,KAAK,EAAnB,EAAuB;AACrB,YAAGH,KAAK,KAAK,CAAC,CAAd,EAAgB;AACdP,UAAAA,YAAY,CAACkD,MAAb,CAAoB3C,KAApB,EAA0B,CAA1B;AACA,eAAKK,QAAL,CAAc;AACZV,YAAAA,OAAO,EAAEF;AADG,WAAd;AAGA,eAAKmD,SAAL,CAAe5B,MAAf,EAAuBjB,QAAvB;AACD;;AACD;AACD;;AAED,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,YAAI6C,SAAS,GAAG;AACd9C,UAAAA,QAAQ,EAAEA,QADI;AAEdI,UAAAA,UAAU,EAAEA,UAFE;AAGda,UAAAA,MAAM,EAAEA,MAHM;AAIdE,UAAAA,QAAQ,EAAEA;AAJI,SAAhB;AAOAzB,QAAAA,YAAY,CAACW,IAAb,CAAkByC,SAAlB;AAEA,aAAKxC,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAEF;AADG,SAAd;AAGA,aAAKqD,YAAL,CAAkB9B,MAAlB,EAAyBE,QAAzB,EAAkCnB,QAAlC,EAA4CI,UAA5C;AACA;AACD;;AAED,UAAIqC,oBAAoB,CAACO,QAArB,CAA8BhD,QAA9B,EAAwC,CAAxC,CAAJ,EAAgD;AAC9C,YAAIiD,MAAM,GAAGjC,MAAM,CAACZ,UAApB;AACA,YAAI6C,MAAM,KAAK/B,SAAX,IAAwB+B,MAAM,KAAK,IAAvC,EAA6CA,MAAM,GAAG,EAAT;AAE7C,YAAI,CAACA,MAAM,CAACD,QAAP,CAAgB5C,UAAhB,CAAL,EAAkC6C,MAAM,IAAI,MAAM7C,UAAhB;AAClC6C,QAAAA,MAAM,GAAGA,MAAM,CAACC,IAAP,EAAT;AAEAlC,QAAAA,MAAM,CAACZ,UAAP,GAAoB6C,MAApB;AACAvD,QAAAA,YAAY,CAACO,KAAD,CAAZ,GAAsBe,MAAtB;AACA,aAAK+B,YAAL,CAAkB9B,MAAlB,EAA0BE,QAA1B,EAAoCH,MAApC,EAA4CiC,MAA5C;AACD,OAVD,MAUO;AACLjC,QAAAA,MAAM,CAACZ,UAAP,GAAoBA,UAApB;AACAY,QAAAA,MAAM,CAACG,QAAP,GAAkBA,QAAlB;AACAzB,QAAAA,YAAY,CAACO,KAAD,CAAZ,GAAsBe,MAAtB;AACA,aAAK+B,YAAL,CAAkB9B,MAAlB,EAA0BE,QAA1B,EAAoCH,MAApC,EAA4CZ,UAA5C;AACD;;AACD,WAAKE,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAEF;AADG,OAAd;AAGD,KA7NkB;;AAAA,SA+NnBqD,YA/NmB,GA+NJ,CAAChC,GAAD,EAAMtB,KAAN,EAAaO,QAAb,EAAuBI,UAAvB,KAAsC;AACnD,UAAI+C,MAAM,GAAG,KAAKxD,KAAL,CAAW4B,QAAxB;AACA,UAAI6B,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAGF,MAAM,CAACrD,IAAP,CAAawD,GAAD,IAASA,GAAG,CAACvC,GAAJ,KAAYA,GAAjC,CAAb;AACA,UAAIwC,QAAQ,GAAGJ,MAAM,CAACjD,OAAP,CAAemD,MAAf,CAAf;;AAEA,UAAIE,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBH,QAAAA,MAAM,GAAG;AACPrC,UAAAA,GADO;AAEPtB,UAAAA,KAAK,EAAEA,KAFA;AAGPO,UAAAA,QAHO;AAIPI,UAAAA,UAAU,EAAEA;AAJL,SAAT;AAMA+C,QAAAA,MAAM,CAACI,QAAD,CAAN,GAAmBH,MAAnB;AACD,OARD,MAQO;AACLD,QAAAA,MAAM,CAAC9C,IAAP,CAAY;AACVU,UAAAA,GAAG,EAAEA,GADK;AAEVtB,UAAAA,KAAK,EAAEA,KAFG;AAGVO,UAAAA,QAAQ,EAAEA,QAHA;AAIVI,UAAAA,UAAU,EAAEA;AAJF,SAAZ;AAMD;;AACD,WAAKE,QAAL,CAAc;AACZ6C,QAAAA,MAAM,EAAEA;AADI,OAAd;AAGD,KAxPkB;;AAAA,SA0PnBN,SA1PmB,GA0PP,CAAC9B,GAAD,EAAMf,QAAN,KAAmB;AAC7B,UAAIuB,QAAQ,GAAG,KAAK5B,KAAL,CAAW4B,QAA1B;AACA,UAAI+B,GAAG,GAAG/B,QAAQ,CAACzB,IAAT,CAAe0D,CAAD,IAAOA,CAAC,CAACzC,GAAF,KAAUA,GAA/B,CAAV;;AACA,UAAGuC,GAAG,KAAKpC,SAAX,EAAqB;AACnB,YAAIjB,KAAK,GAAGsB,QAAQ,CAACrB,OAAT,CAAiBoD,GAAjB,CAAZ;AACA/B,QAAAA,QAAQ,CAACqB,MAAT,CAAgB3C,KAAhB,EAAuB,CAAvB;AACA,aAAKK,QAAL,CAAc;AAAEiB,UAAAA;AAAF,SAAd;AACD;AACF,KAlQkB;;AAAA,SAoQnBkC,gBApQmB,GAoQA,MAAM;AACvB,UAAIC,SAAS,GAAG,KAAK/D,KAAL,CAAWC,OAA3B;AACA,UAAI+D,SAAS,GAAG,EAAhB;;AAEA,WAAI,MAAM3C,MAAV,IAAoB0C,SAApB,EAA+B;AAAK;AAClC,YAAG1C,MAAM,CAAChB,QAAP,KAAoB,GAAvB,EAA4B;AAC5B2D,QAAAA,SAAS,CAACtD,IAAV,CAAeW,MAAf;AACD;;AAED,WAAKV,QAAL,CAAc;AACZiB,QAAAA,QAAQ,EAAE,EADE;AAEZ3B,QAAAA,OAAO,EAAE+D;AAFG,OAAd;AAID,KAjRkB;;AAEjB,SAAKhE,KAAL,GAAa;AACXyC,MAAAA,KAAK,EAAE,EADI;AAEXM,MAAAA,0BAA0B,EAAE,CAAC,QAAD,EAAW,UAAX,CAFjB;AAGXL,MAAAA,WAAW,EAAE,CAHF;AAIXd,MAAAA,QAAQ,EAAE,EAJC;AAKXd,MAAAA,SAAS,EAAE,IAAIC,eAAJ,CAAoBnB,KAAK,CAACqB,QAAN,CAAeC,MAAnC,CALA;AAMXjB,MAAAA,OAAO,EAAE,CACP;AACEI,QAAAA,QAAQ,EAAE,GADZ;AAEEI,QAAAA,UAAU,EAAE,IAAIM,eAAJ,CAAoBnB,KAAK,CAACqB,QAAN,CAAeC,MAAnC,EAA2Ce,GAA3C,CAA+C,GAA/C;AAFd,OADO,CANE;AAYXgC,MAAAA,cAAc,EAAE1C;AAZL,KAAb;AAcD;;AAmQD2C,EAAAA,iBAAiB,GAAG;AAClB,QAAI/C,MAAM,GAAG,KAAKN,iBAAL,EAAb;AACA,SAAKY,OAAL,CAAaN,MAAb;AACA,QAAIU,WAAW,GAAG,EAAlB;;AACA,SAAK,MAAMR,MAAX,IAAqBF,MAArB,EAA6B;AAC3BU,MAAAA,WAAW,IAAK,GAAER,MAAM,CAAChB,QAAS,IAAGgB,MAAM,CAACZ,UAAW,GAAvD;AACD;;AACD,QAAIoB,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB,CAAX,KAAwC,GAA5C,EACED,WAAW,GAAGA,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqBF,WAAW,CAACC,MAAZ,GAAqB,CAA1C,CAAd,CARgB,CASlB;AACA;;AACA,QAAIE,KAAK,GAAI,sBAAqBH,WAAY,EAA9C;AACA3C,IAAAA,WAAW,CACR+C,GADH,CACQ,GAAED,KAAM,EADhB,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;AACA,UAAIgC,QAAQ,GAAG,CAAf,CAFkB,CAED;;AACjB,UAAIC,QAAQ,GAAG,KAAf,CAHkB,CAGG;;AACrB,UAAIjC,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAI8B,iBAAiB,GAAGlC,QAAQ,CAACG,IAAT,CAAcG,KAAtC;AACA,YAAI6B,aAAa,GAAG,EAApB;;AAEA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,iBAAiB,CAACvC,MAArC,EAA6CyC,CAAC,EAA9C,EAAiD;AAC/C,cAAIC,WAAW,GAAG,EAAlB;AACAA,UAAAA,WAAW,GAAG;AAACC,YAAAA,IAAI,EAAEJ,iBAAiB,CAACE,CAAD,CAAjB,CAAqB,CAArB;AAAP,WAAd;;AACA,cAAGA,CAAC,GAAG,CAAP,EAAU;AACR,iBAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeH,CAAC,GAACF,iBAAiB,CAACE,CAAD,CAAjB,CAAqBzC,MAAtC,EAA8C4C,CAAC,EAA/C,EAAkD,CAEjD;AACF;AACF;;AACD,YAAIlC,aAAa,GAAGL,QAAQ,CAACG,IAAT,CAAcG,KAAlC;AACA,aAAK9B,QAAL,CAAc;AACZ8B,UAAAA,KAAK,EAAED,aADK;AAEZE,UAAAA,WAAW,EAAE,EAFD;AAEK;AACjBuB,UAAAA,cAAc,EAAE;AAAEE,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,YAAAA,QAAQ,EAAEA;AAAhC,WAHJ;AAIZE,UAAAA;AAJY,SAAd;AAOA,aAAK1E,KAAL,CAAW+E,OAAX,CAAmBjE,IAAnB,CAAyB,WAAUmB,WAAY,EAA/C;AACD,OAtBD,MAsBO;AACL,eAAOO,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcsC,OAA1B,CAAP;AACD;AACF,KA/BH,EAgCGjC,KAhCH,CAgCUC,GAAD,IAAS;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KAlCH;AAmCD;;AAEAiC,EAAAA,MAAM,GAAG;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE,KAAKjE,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,OAAO,EAAE,MAAMwB,OAAO,CAACC,GAAR,CAAY,KAAKrC,KAAL,CAAWC,OAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,KAAK6D,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,gBAAD;AACE,UAAA,SAAS,EAAE,KAAKjB,SADlB;AAGE,UAAA,aAAa,EAAE,KAAK7C,KAAL,CAAWsE,aAAX,KAA6B,IAA7B,IAAoC,KAAKtE,KAAL,CAAWsE;AAHhE;AAAA;AAAA;AAAA;AAAA,gBAbF,EAkBG,KAAKtE,KAAL,CAAWiE,cAAX,KAA8B1C,SAA9B,iBACC,QAAC,KAAD;AACE,UAAA,SAAS,EAAE,KAAKsB,SADlB;AAEE,UAAA,WAAW,EAAE,KAAK7C,KAAL,CAAWiE,cAF1B;AAGE,UAAA,aAAa,EAAE,KAAKjE,KAAL,CAAW4B,QAAX,CAAoBzB,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACgB,GAAF,KAAU,UAAxC,CAHjB;AAIE,UAAA,aAAa,EAAE,KAAKpB,KAAL,CAAW4B,QAAX,CAAoBzB,IAApB,CAAyBC,CAAC,IAAIA,CAAC,CAACgB,GAAF,KAAU,UAAxC;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA0BE,QAAC,MAAD;AACE,UAAA,SAAS,EAAE,KAAKyB,SADlB;AAEE,UAAA,cAAc,EAAE,KAAK7C,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACkB,MAAF,KAAa,WAA1C,CAFlB;AAGE,UAAA,eAAe,EAAE,KAAKtB,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACkB,MAAF,KAAa,YAA1C;AAHnB;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA+BE,QAAC,IAAD;AACE,UAAA,SAAS,EAAE,KAAKuB,SADlB;AAEE,UAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,WAA5C;AAFT;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqCE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACE;AAAG,cAAA,KAAK,EAAE;AAAEyE,gBAAAA,MAAM,EAAE;AAAV,eAAV;AAAA,yBAA0B,KAAK9E,KAAL,CAAW0C,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,aAAD;AACE,cAAA,kBAAkB,EAAE,KAAK7C,kBAD3B;AAEI,cAAA,cAAc,EAAE,KAAKG,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,OAA5C;AAFpB;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,sBACG,KAAKL,KAAL,CAAW4B,QAAX,CAAoBmD,GAApB,CAAyBpD,GAAD,IAAS;AAChC,kCAAO,QAAC,IAAD;AAAM,gBAAA,GAAG,EAAEA,GAAX;AAAgB,gBAAA,SAAS,EAAE,KAAKkB;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,oBACG,KAAK7C,KAAL,CAAWyC,KAAX,CAAiBsC,GAAjB,CAAqB,CAACC,IAAD,EAAO1E,KAAP,KAAiB;AACrC0E,YAAAA,IAAI,CAACC,OAAL,GAAeD,IAAf;AACA,gCACE;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,uCACE,QAAC,WAAD;AACE,kBAAA,GAAG,EAAEA,IAAI,CAACC,OAAL,CAAaC,MADpB;AAEE,kBAAA,KAAK,EAAEF,IAAI,CAACC,OAAL,CAAaE,KAFtB;AAGE,kBAAA,IAAI,EAAEH,IAAI,CAACC,OAAL,CAAaG,KAHrB;AAIE,kBAAA,EAAE,EAAEJ,IAAI,CAACC,OAAL,CAAaI;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF,iBAA8BL,IAAI,CAACC,OAAL,CAAaI,GAA3C;AAAA;AAAA;AAAA;AAAA;AADF,6BADF;AAYD,WAdA;AADH;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4ED;;AAlZwC;;AAqZ3CjG,KAAK,CAACkG,YAAN,GAAqB;AACnBC,EAAAA,WAAW,EAAE;AAAEpB,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,QAAQ,EAAE;AAAzB;AADM,CAArB;AAGA,eAAe3E,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./SearchResult.css\";\r\nimport ProductCard from \"../../Component/ProductCard/ProductCard.js\";\r\nimport { instanceAxs } from \"../../api/Api\";\r\nimport Date from \"./FilterComponents/Date\";\r\nimport Price from \"./FilterComponents/Price\";\r\nimport Status from \"./FilterComponents/Status\";\r\nimport Tags from \"./FilterComponents/Tags.js\";\r\nimport PrimarySelect from \"./ComponentSelect/PrimarySelect\";\r\nimport CategorySelector from \"./FilterComponents/CategorySelecter\";\r\n\r\nclass SearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      filtersWithMultipleQueries: [\"status\", \"location\"],\r\n      resultCount: 0,\r\n      tagArray: [],\r\n      urlParams: new URLSearchParams(props.location.search),\r\n      filters: [\r\n        {\r\n          queryKey: \"q\",\r\n          queryValue: new URLSearchParams(props.location.search).get(\"q\"),\r\n        }\r\n      ],\r\n      minAndMaxPrice: undefined,\r\n    };\r\n  }\r\n\r\n  setSortingCategory = (value) => {\r\n    var queryFilters = this.state.filters;\r\n    var hasOrderFilter = queryFilters.find(e => e.queryKey === \"order\");\r\n    var index = queryFilters.indexOf(hasOrderFilter);\r\n\r\n    if(index !== -1) {\r\n      hasOrderFilter[\"queryValue\"] = value;\r\n      queryFilters[index] = hasOrderFilter;\r\n    } else {\r\n      var orderFilter = {\r\n        queryKey: \"order\",\r\n        queryValue: value\r\n      }\r\n      queryFilters.push(orderFilter);\r\n    }\r\n\r\n    this.setState({\r\n      filters: queryFilters\r\n    });\r\n    this.makeSearch()\r\n    /* var sorting = e.target.value;\r\n    this.setFilter(\"order\", sorting, sorting); */\r\n  };\r\n\r\n  getFiltersOnMount = () => {\r\n    let urlParams = new URLSearchParams(window.location.search)\r\n\r\n    var params = [];\r\n    for (const [key, value] of urlParams) {\r\n      var filter = {};\r\n\r\n      switch(key){\r\n        case 'q':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: undefined,\r\n            tagValue: undefined,\r\n          };\r\n          params.push(filter)\r\n          break;\r\n        case 'order':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value\r\n          }\r\n          params.push(filter);\r\n          break;\r\n        case 'price_max':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"maxPrice\",\r\n            tagValue: `til ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'price_min':\r\n          filter = {\r\n            queryKey: key,\r\n            queryValue: value,\r\n            tagKey: \"minPrice\",\r\n            tagValue: `fra ${value}`,\r\n          };\r\n          params.push(filter);\r\n          break;\r\n        case 'status':\r\n          if(value === \"new\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusNew\",\r\n              tagValue: \"Nytt\",\r\n            };\r\n          } else if(value === \"used\") {\r\n            filter = {\r\n              queryKey: key,\r\n              queryValue: value,\r\n              tagKey: \"statusUsed\",\r\n              tagValue: \"Brukt\",\r\n            };\r\n          }\r\n          \r\n          params.push(filter);\r\n          break;\r\n      }\r\n    }\r\n    this.setState({\r\n      filters: params\r\n    });\r\n    return params;\r\n  };\r\n\r\n  getTags = (queryFilters) => {\r\n    var filters = queryFilters === undefined ? this.state.filters : queryFilters;\r\n    var tags = [];\r\n\r\n    for (const filter of filters) {\r\n      if (filter.tagKey !== undefined) {\r\n        var tag = {\r\n          key: filter.tagKey,\r\n          value: filter.tagValue,\r\n          queryKey: filter.queryKey,\r\n          queryValue: filter.queryValue,\r\n        };\r\n        tags.push(tag);\r\n      }\r\n    }\r\n    this.setState({\r\n      tagArray: tags,\r\n    });\r\n    return tags;\r\n  };\r\n\r\n  makeSearch = () => {\r\n    let filters = this.state.filters;\r\n    var queryString = \"\";\r\n    for (const filter of filters) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    /* Object.entries(filters).forEach(\r\n      ([key, value]) => (queryString += `${key}=${value}&`)\r\n    ); */\r\n    \r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n    let query = `/file/getmenuitems?${queryString}`;\r\n    instanceAxs\r\n      .get(query)\r\n      .then((response) => {\r\n        console.log(query)\r\n        console.log(\"Search response\", response);\r\n        if (response.data.status) {\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: returnedItems.length,\r\n          });\r\n          // window.history.pushState(\"page2\", \"seach made\", query);\r\n          // this.getFiltersOnMount();\r\n          // window.location.href =  query\r\n        } else {\r\n          \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  setFilter = (queryKey, queryValue, tagKey, tagValue) => {\r\n    var queryFilters = this.state.filters;\r\n    var multipleQueryFilters = this.state.filtersWithMultipleQueries;\r\n    var filter = queryFilters.find((element) => element.tagKey === tagKey);\r\n    var index = queryFilters.indexOf(filter);\r\n\r\n    if (queryValue === '') {\r\n      if(index !== -1){\r\n        queryFilters.splice(index,1)\r\n        this.setState({\r\n          filters: queryFilters\r\n        });\r\n        this.removeTag(tagKey, queryKey)\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (index === -1) {\r\n      var newFilter = {\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n        tagKey: tagKey,\r\n        tagValue: tagValue,\r\n      };\r\n\r\n      queryFilters.push(newFilter);\r\n\r\n      this.setState({\r\n        filters: queryFilters,\r\n      });\r\n      this.addFilterTag(tagKey,tagValue,queryKey, queryValue);\r\n      return;\r\n    }\r\n\r\n    if (multipleQueryFilters.includes(queryKey, 0)) {\r\n      var qValue = filter.queryValue;\r\n      if (qValue === undefined || qValue === null) qValue = \"\";\r\n\r\n      if (!qValue.includes(queryValue)) qValue += \" \" + queryValue;\r\n      qValue = qValue.trim();\r\n\r\n      filter.queryValue = qValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, qValue)\r\n    } else {\r\n      filter.queryValue = queryValue;\r\n      filter.tagValue = tagValue;\r\n      queryFilters[index] = filter;\r\n      this.addFilterTag(tagKey, tagValue, filter, queryValue)\r\n    }\r\n    this.setState({\r\n      filters: queryFilters,\r\n    });\r\n  };\r\n\r\n  addFilterTag = (key, value, queryKey, queryValue) => {\r\n    let tagArr = this.state.tagArray;\r\n    var tagObj = {};\r\n    var object = tagArr.find((obj) => obj.key === key);\r\n    var objIndex = tagArr.indexOf(object);\r\n\r\n    if (objIndex !== -1) {\r\n      tagObj = {\r\n        key,\r\n        value: value,\r\n        queryKey,\r\n        queryValue: queryValue,\r\n      };\r\n      tagArr[objIndex] = tagObj;\r\n    } else {\r\n      tagArr.push({\r\n        key: key,\r\n        value: value,\r\n        queryKey: queryKey,\r\n        queryValue: queryValue,\r\n      });\r\n    }\r\n    this.setState({\r\n      tagArr: tagArr,\r\n    });\r\n  };\r\n\r\n  removeTag = (key, queryKey) => {\r\n    var tagArray = this.state.tagArray;\r\n    let obj = tagArray.find((x) => x.key === key);\r\n    if(obj !== undefined){\r\n      let index = tagArray.indexOf(obj);\r\n      tagArray.splice(index, 1);\r\n      this.setState({ tagArray });\r\n    } \r\n  };\r\n\r\n  removeAllFilters = () => {\r\n    var filterObj = this.state.filters;\r\n    var filterArr = [];\r\n\r\n    for(const filter of filterObj) {    // remove all filters except for 'q'\r\n      if(filter.queryKey !== 'q') break;\r\n      filterArr.push(filter)\r\n    }\r\n\r\n    this.setState({\r\n      tagArray: [],\r\n      filters: filterArr,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let params = this.getFiltersOnMount();\r\n    this.getTags(params);\r\n    var queryString = \"\";\r\n    for (const filter of params) {\r\n      queryString += `${filter.queryKey}=${filter.queryValue}&`;\r\n    }\r\n    if (queryString[queryString.length - 1] === \"&\")\r\n      queryString = queryString.slice(0, queryString.length - 1);\r\n    // arr = [{main: \"car\", sub: {\"truch\", \"sedan\"}}]\r\n    // let query = `/search?${queryString}`;\r\n    let query = `/file/getmenuitems?${queryString}`\r\n    instanceAxs\r\n      .get(`${query}`)\r\n      .then((response) => {\r\n        console.log(\"Search response\", response);\r\n        var minPrice = 0 //response.data.additional.minPrice;\r\n        var maxPrice = 10000 //response.data.additional.maxPrice;\r\n        if (response.status === 200) {\r\n          var responseDataItems = response.data.items;\r\n          var categoryArray = [];\r\n\r\n          for(let i = 0; i < responseDataItems.length; i++){\r\n            let categoryObj = {};\r\n            categoryObj = {main: responseDataItems[i][0]};\r\n            if(i > 0) {\r\n              for(let k = 0; i<responseDataItems[i].length; k++){\r\n                \r\n              }\r\n            }\r\n          }\r\n          var returnedItems = response.data.items;\r\n          this.setState({\r\n            items: returnedItems,\r\n            resultCount: 10, //returnedItems.length,\r\n            minAndMaxPrice: { minPrice: minPrice, maxPrice: maxPrice },\r\n            categoryArray\r\n          });\r\n\r\n          this.props.history.push(`/search?${queryString}`);\r\n        } else {\r\n          return console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <div className=\"container-fluid searchResultPageContainer\">\r\n        <div className=\"searchFilterComponents\">\r\n          <button className=\"btn btn-primary\" onClick={this.makeSearch}>\r\n            Bruk Endringer\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary \"\r\n            onClick={() => console.log(this.state.filters)}\r\n          >\r\n            Lagre Søk\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={this.removeAllFilters}>\r\n            Fjerne Filtre\r\n          </button>\r\n          <CategorySelector\r\n            setfilter={this.setFilter}\r\n            \r\n            categoryState={this.state.categoryArray !== null &&this.state.categoryArray}\r\n          ></CategorySelector>\r\n          {this.state.minAndMaxPrice !== undefined && (\r\n            <Price\r\n              setfilter={this.setFilter}\r\n              priceObject={this.state.minAndMaxPrice}\r\n              minPriceState={this.state.tagArray.find(e => e.key === \"minPrice\")}\r\n              maxPriceState={this.state.tagArray.find(e => e.key === \"maxPrice\")}\r\n            />\r\n          )}\r\n          <Status\r\n            setfilter={this.setFilter}\r\n            statusNewState={this.state.filters.find(e => e.tagKey === \"statusNew\")}\r\n            statusUsedState={this.state.filters.find(e => e.tagKey === \"statusUsed\")}\r\n          ></Status>\r\n          <Date\r\n            setfilter={this.setFilter}\r\n            state={this.state.filters.find(e => e.queryKey === \"published\")}\r\n          ></Date>\r\n        </div>\r\n        <div className=\"searchResults\">\r\n          <div className=\"searchResults_Info\">\r\n            <div className=\"searchResults_Order \">\r\n              <p style={{ margin: 0 }}>{this.state.resultCount} treff</p>\r\n\r\n              <PrimarySelect \r\n                setSortingCategory={this.setSortingCategory}\r\n                  selectedOption={this.state.filters.find(e => e.queryKey === \"order\")}>\r\n              </PrimarySelect>\r\n\r\n            </div>\r\n\r\n            <div className=\"filterTagsContainer\">\r\n              {this.state.tagArray.map((tag) => {\r\n                return <Tags tag={tag} setfilter={this.setFilter} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"searchResults_Items\">\r\n            {this.state.items.map((item, index) => {\r\n              item.annonce = item\r\n              return (\r\n                <>\r\n                  <div className=\"itemCol\" key={item.annonce._id}>\r\n                    <ProductCard                \r\n                      img={item.annonce.images}\r\n                      price={item.annonce.price}\r\n                      name={item.annonce.title}\r\n                      id={item.annonce._id}\r\n                    />\r\n                  </div>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPrice.defaultProps = {\r\n  priceObject: { minPrice: 0, maxPrice: 50 },\r\n};\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}