{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\nvar initialState = {\n  logged: false\n};\n\nconst isLoggedReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SIGN_IN\":\n      return { ...state,\n        logged: true\n      };\n\n    case \"SIGN_OUT\":\n      return state.isLogged = true;\n\n    default:\n      return state;\n  }\n};\n\nexport function LoggedSelector() {\n  _s();\n\n  return useSelector(state => state.isLogged);\n}\n\n_s(LoggedSelector, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoggedSelector;\nexport default isLoggedReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedSelector\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/reducers/isLoggedReducer.js"],"names":["useSelector","login","instanceAxs","initialState","logged","isLoggedReducer","state","action","type","isLogged","LoggedSelector"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE;AADO,CAAnB;;AAGA,MAAMC,eAAe,GAAI,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,MAAM,EAAE;AAApB,OAAP;;AACJ,SAAK,UAAL;AACI,aAAOE,KAAK,CAACG,QAAN,GAAiB,IAAxB;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD;;AAWA,OAAO,SAASI,cAAT,GAAyB;AAAA;;AAC5B,SAAOV,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,QAAhB,CAAlB;AACH;;GAFeC,c;UACLV,W;;;KADKU,c;AAIhB,eAAeL,eAAf","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { login } from \"../api/Api\";\nimport { instanceAxs } from \"../api/Api\";\n\nvar initialState = {\n    logged: false\n}\nconst isLoggedReducer =  (state = initialState, action) => {\n    switch (action.type) {\n        case \"SIGN_IN\":\n            return { ...state, logged: true };\n        case \"SIGN_OUT\":\n            return state.isLogged = true\n        default:\n            return state;\n    }\n}\n\nexport function LoggedSelector(){\n    return useSelector(state => state.isLogged);\n}\n\nexport default isLoggedReducer;"]},"metadata":{},"sourceType":"module"}