{"ast":null,"code":"var _jsxFileName = \"/home/tolga/VS Code workspace/Brukth\\xE5nd/secondhand/src/redux/redux.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Redux() {\n  _s();\n\n  const [value, setValue] = useState(0);\n\n  const countReducer = function (state = value, action) {\n    switch (action.type) {\n      case \"INCREMENT\":\n        return state + 1;\n\n      case \"DECREMENT\":\n        return state - 1;\n\n      default:\n        return state;\n    }\n  };\n\n  let store = createStore(countReducer);\n\n  const addTodo = number => {\n    return {\n      type: 'todos/todoAdded',\n      payload: number\n    };\n  };\n\n  const handle = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [value, /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Redux, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c = Redux;\nexport default Redux;\n\nvar _c;\n\n$RefreshReg$(_c, \"Redux\");","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/redux/redux.js"],"names":["useState","createStore","useSelector","useDispatch","Redux","value","setValue","countReducer","state","action","type","store","addTodo","number","payload","handle"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAG,UAAUC,KAAK,GAAGH,KAAlB,EAAyBI,MAAzB,EAAiC;AAClD,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,WAAL;AACE,eAAOF,KAAK,GAAG,CAAf;;AACF,WAAK,WAAL;AACE,eAAOA,KAAK,GAAG,CAAf;;AACF;AACE,eAAOA,KAAP;AANJ;AAQH,GATD;;AAWA,MAAIG,KAAK,GAAGV,WAAW,CAACM,YAAD,CAAvB;;AAEA,QAAMK,OAAO,GAAGC,MAAM,IAAI;AACtB,WAAO;AACLH,MAAAA,IAAI,EAAE,iBADD;AAELI,MAAAA,OAAO,EAAED;AAFJ,KAAP;AAIH,GALD;;AAOA,QAAME,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAIA,sBACI;AAAA,eACKV,KADL,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjCQD,K;;KAAAA,K;AAmCT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\"\nimport { createStore } from \"redux\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction Redux() {\n    const [value, setValue] = useState(0);\n\n    const countReducer = function (state = value, action) {\n        switch (action.type) {\n          case \"INCREMENT\":\n            return state + 1;\n          case \"DECREMENT\":\n            return state - 1;\n          default:\n            return state;\n        }\n    };\n\n    let store = createStore(countReducer);\n\n    const addTodo = number => {\n        return {\n          type: 'todos/todoAdded',\n          payload: number\n        }\n    }\n\n    const handle = () => {\n\n    }\n\n    return(\n        <div>\n            {value}\n            <button></button>\n        </div>\n    )\n}\n\nexport default Redux;"]},"metadata":{},"sourceType":"module"}