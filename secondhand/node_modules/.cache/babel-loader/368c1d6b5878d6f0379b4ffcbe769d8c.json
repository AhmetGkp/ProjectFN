{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux'; // import { rootReducer } from '../reducers/rootReducer'\n\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n};\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged', 'user']\n};\nconst rootReducer = combineReducers({\n  isLogged: LoginReducer,\n  user: userReducer,\n  filters: persistReducer(sessionConfig, SearchReducer)\n});\nexport const loadSessionState = () => {\n  try {\n    const serializedSessionState = window.sessionStorage.getItem('');\n    const serializedLocalState = window.localStorage.getItem('persist:root');\n\n    if (serializedLocalState === null) {\n      return undefined;\n    }\n\n    var sessisonData = JSON.parse(serializedSessionState);\n    var localData = JSON.parse(serializedLocalState);\n    /* \n        sessisonData = {\"type\": \"session\", \"data\": {\"session\": sessisonData}}; \n        var localData = JSON.parse(serializedLocalState);\n        localData = {\"type1\": \"local\", \"veri\": {\"local\": localData}}; \n        let finalData =Object.assign(sessisonData,localData)\n        console.log(\"finalData\", finalData) */\n\n    var finalData = {\n      sessisonData,\n      localData\n    };\n    let data = serializedLocalState.replace(/\\\\/g, '');\n    console.log(data);\n    return localData;\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nconst loadState = () => {\n  try {\n    const serializedState = window.localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    var userData = JSON.stringify(state.user);\n    var isLoggedData = JSON.stringify(state.isLogged);\n    var filtersData = JSON.stringify(state.filters);\n    console.log(\"user\", userData); // localStorage.setItem(\"state\",userData);\n    // sessionStorage.setItem(\"sessionData\", filtersData)\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/home/tolga/VS Code workspace/BrukthÃ¥nd/secondhand/src/config/store-config.js"],"names":["persistReducer","localStorage","sessionStorage","combineReducers","LoginReducer","userReducer","SearchReducer","persistConfig","key","storage","blacklist","sessionConfig","rootReducer","isLogged","user","filters","loadSessionState","serializedSessionState","window","getItem","serializedLocalState","undefined","sessisonData","JSON","parse","localData","finalData","data","replace","console","log","err","loadState","serializedState","saveState","state","userData","stringify","isLoggedData","filtersData","persistedState","persistedReducer"],"mappings":"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","sourcesContent":["import { persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/es/storage';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport { combineReducers } from 'redux';\n// import { rootReducer } from '../reducers/rootReducer'\nimport LoginReducer from '../reducers/LoginReducer';\nimport userReducer from '../reducers/userReducer';\nimport SearchReducer from '../reducers/SearchReducer';\n\nconst persistConfig = {\n  //timeout: 2000,\n  key: 'root',\n  storage: localStorage,\n  blacklist: ['filters']\n}\n\nexport const sessionConfig = {\n  key: 'user',\n  storage: sessionStorage,\n  blacklist: ['isLogged','user']\n}\n\nconst rootReducer = combineReducers({ \n  isLogged: LoginReducer,\n  user: userReducer,\n  filters: persistReducer(sessionConfig, SearchReducer)\n}); \n\nexport const loadSessionState = () => {\n  try {\n    const serializedSessionState = window.sessionStorage.getItem('');\n    const serializedLocalState = window.localStorage.getItem('persist:root');\n\n    if (serializedLocalState === null) {\n      return undefined;\n    } \n    var sessisonData = JSON.parse(serializedSessionState);\n        var localData = JSON.parse(serializedLocalState);\n/* \n    sessisonData = {\"type\": \"session\", \"data\": {\"session\": sessisonData}}; \n    var localData = JSON.parse(serializedLocalState);\n    localData = {\"type1\": \"local\", \"veri\": {\"local\": localData}}; \n    let finalData =Object.assign(sessisonData,localData)\n    console.log(\"finalData\", finalData) */\n    var finalData = {sessisonData,localData};\n    let data = serializedLocalState.replace(/\\\\/g, '')\n    console.log(data)\n    return localData;\n  } catch(err) {\n    console.log(err); \n    return undefined;\n  }\n}\n\n\n\nconst loadState = () => {\n    try {\n      const serializedState = window.localStorage.getItem('state');\n      \n      if(serializedState === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedState);\n    } catch (err) {\n      console.log(err);\n      return undefined;\n    }\n};\n  \nexport const saveState = (state) => {\n    try {\n      var userData = JSON.stringify(state.user);\n      var isLoggedData = JSON.stringify(state.isLogged);\n      var filtersData = JSON.stringify(state.filters);\n      console.log(\"user\", userData)\n      // localStorage.setItem(\"state\",userData);\n      // sessionStorage.setItem(\"sessionData\", filtersData)\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const persistedState = loadSessionState();\nexport const persistedReducer = persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}